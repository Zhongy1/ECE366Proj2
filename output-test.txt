Instruction: addi $8, $0, 0
	Change $8 to 0
	PC: 0 --> 4
Instruction: addi $9, $0, 255
	Change $9 to 255
	PC: 4 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 1
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 1 to memory location 0x1FFF + 1
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	1 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 2
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 2 to memory location 0x1FFF + 2
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	2 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 3
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 3 to memory location 0x1FFF + 3
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	3 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 4
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 4 to memory location 0x1FFF + 4
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	4 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 5
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 5 to memory location 0x1FFF + 5
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	5 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 6
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 6 to memory location 0x1FFF + 6
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	6 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 7
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 7 to memory location 0x1FFF + 7
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	7 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 8
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 8 to memory location 0x1FFF + 8
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	8 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 9
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 9 to memory location 0x1FFF + 9
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	9 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 10
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 10 to memory location 0x1FFF + 10
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	10 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 11
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 11 to memory location 0x1FFF + 11
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	11 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 12
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 12 to memory location 0x1FFF + 12
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	12 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 13
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 13 to memory location 0x1FFF + 13
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	13 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 14
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 14 to memory location 0x1FFF + 14
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	14 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 15
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 15 to memory location 0x1FFF + 15
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	15 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 16
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 16 to memory location 0x1FFF + 16
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	16 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 17
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 17 to memory location 0x1FFF + 17
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	17 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 18
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 18 to memory location 0x1FFF + 18
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	18 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 19
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 19 to memory location 0x1FFF + 19
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	19 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 20
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 20 to memory location 0x1FFF + 20
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	20 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 21
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 21 to memory location 0x1FFF + 21
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	21 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 22
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 22 to memory location 0x1FFF + 22
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	22 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 23
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 23 to memory location 0x1FFF + 23
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	23 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 24
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 24 to memory location 0x1FFF + 24
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	24 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 25
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 25 to memory location 0x1FFF + 25
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	25 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 26
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 26 to memory location 0x1FFF + 26
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	26 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 27
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 27 to memory location 0x1FFF + 27
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	27 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 28
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 28 to memory location 0x1FFF + 28
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	28 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 29
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 29 to memory location 0x1FFF + 29
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	29 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 30
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 30 to memory location 0x1FFF + 30
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	30 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 31
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 31 to memory location 0x1FFF + 31
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	31 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 32
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 32 to memory location 0x1FFF + 32
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	32 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 33
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 33 to memory location 0x1FFF + 33
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	33 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 34
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 34 to memory location 0x1FFF + 34
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	34 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 35
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 35 to memory location 0x1FFF + 35
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	35 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 36
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 36 to memory location 0x1FFF + 36
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	36 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 37
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 37 to memory location 0x1FFF + 37
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	37 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 38
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 38 to memory location 0x1FFF + 38
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	38 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 39
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 39 to memory location 0x1FFF + 39
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	39 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 40
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 40 to memory location 0x1FFF + 40
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	40 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 41
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 41 to memory location 0x1FFF + 41
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	41 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 42
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 42 to memory location 0x1FFF + 42
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	42 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 43
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 43 to memory location 0x1FFF + 43
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	43 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 44
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 44 to memory location 0x1FFF + 44
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	44 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 45
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 45 to memory location 0x1FFF + 45
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	45 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 46
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 46 to memory location 0x1FFF + 46
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	46 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 47
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 47 to memory location 0x1FFF + 47
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	47 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 48
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 48 to memory location 0x1FFF + 48
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	48 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 49
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 49 to memory location 0x1FFF + 49
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	49 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 50
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 50 to memory location 0x1FFF + 50
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	50 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 51
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 51 to memory location 0x1FFF + 51
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	51 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 52
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 52 to memory location 0x1FFF + 52
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	52 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 53
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 53 to memory location 0x1FFF + 53
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	53 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 54
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 54 to memory location 0x1FFF + 54
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	54 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 55
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 55 to memory location 0x1FFF + 55
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	55 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 56
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 56 to memory location 0x1FFF + 56
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	56 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 57
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 57 to memory location 0x1FFF + 57
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	57 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 58
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 58 to memory location 0x1FFF + 58
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	58 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 59
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 59 to memory location 0x1FFF + 59
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	59 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 60
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 60 to memory location 0x1FFF + 60
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	60 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 61
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 61 to memory location 0x1FFF + 61
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	61 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 62
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 62 to memory location 0x1FFF + 62
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	62 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 63
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 63 to memory location 0x1FFF + 63
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	63 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 64
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 64 to memory location 0x1FFF + 64
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	64 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 65
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 65 to memory location 0x1FFF + 65
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	65 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 66
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 66 to memory location 0x1FFF + 66
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	66 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 67
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 67 to memory location 0x1FFF + 67
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	67 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 68
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 68 to memory location 0x1FFF + 68
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	68 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 69
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 69 to memory location 0x1FFF + 69
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	69 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 70
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 70 to memory location 0x1FFF + 70
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	70 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 71
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 71 to memory location 0x1FFF + 71
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	71 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 72
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 72 to memory location 0x1FFF + 72
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	72 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 73
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 73 to memory location 0x1FFF + 73
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	73 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 74
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 74 to memory location 0x1FFF + 74
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	74 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 75
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 75 to memory location 0x1FFF + 75
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	75 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 76
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 76 to memory location 0x1FFF + 76
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	76 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 77
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 77 to memory location 0x1FFF + 77
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	77 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 78
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 78 to memory location 0x1FFF + 78
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	78 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 79
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 79 to memory location 0x1FFF + 79
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	79 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 80
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 80 to memory location 0x1FFF + 80
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	80 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 81
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 81 to memory location 0x1FFF + 81
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	81 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 82
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 82 to memory location 0x1FFF + 82
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	82 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 83
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 83 to memory location 0x1FFF + 83
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	83 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 84
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 84 to memory location 0x1FFF + 84
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	84 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 85
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 85 to memory location 0x1FFF + 85
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	85 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 86
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 86 to memory location 0x1FFF + 86
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	86 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 87
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 87 to memory location 0x1FFF + 87
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	87 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 88
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 88 to memory location 0x1FFF + 88
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	88 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 89
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 89 to memory location 0x1FFF + 89
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	89 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 90
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 90 to memory location 0x1FFF + 90
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	90 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 91
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 91 to memory location 0x1FFF + 91
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	91 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 92
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 92 to memory location 0x1FFF + 92
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	92 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 93
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 93 to memory location 0x1FFF + 93
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	93 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 94
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 94 to memory location 0x1FFF + 94
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	94 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 95
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 95 to memory location 0x1FFF + 95
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	95 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 96
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 96 to memory location 0x1FFF + 96
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	96 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 97
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 97 to memory location 0x1FFF + 97
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	97 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 98
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 98 to memory location 0x1FFF + 98
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	98 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 99
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 99 to memory location 0x1FFF + 99
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	99 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 100
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 100 to memory location 0x1FFF + 100
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	100 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 101
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 101 to memory location 0x1FFF + 101
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	101 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 102
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 102 to memory location 0x1FFF + 102
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	102 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 103
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 103 to memory location 0x1FFF + 103
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	103 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 104
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 104 to memory location 0x1FFF + 104
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	104 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 105
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 105 to memory location 0x1FFF + 105
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	105 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 106
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 106 to memory location 0x1FFF + 106
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	106 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 107
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 107 to memory location 0x1FFF + 107
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	107 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 108
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 108 to memory location 0x1FFF + 108
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	108 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 109
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 109 to memory location 0x1FFF + 109
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	109 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 110
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 110 to memory location 0x1FFF + 110
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	110 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 111
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 111 to memory location 0x1FFF + 111
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	111 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 112
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 112 to memory location 0x1FFF + 112
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	112 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 113
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 113 to memory location 0x1FFF + 113
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	113 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 114
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 114 to memory location 0x1FFF + 114
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	114 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 115
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 115 to memory location 0x1FFF + 115
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	115 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 116
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 116 to memory location 0x1FFF + 116
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	116 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 117
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 117 to memory location 0x1FFF + 117
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	117 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 118
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 118 to memory location 0x1FFF + 118
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	118 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 119
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 119 to memory location 0x1FFF + 119
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	119 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 120
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 120 to memory location 0x1FFF + 120
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	120 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 121
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 121 to memory location 0x1FFF + 121
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	121 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 122
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 122 to memory location 0x1FFF + 122
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	122 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 123
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 123 to memory location 0x1FFF + 123
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	123 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 124
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 124 to memory location 0x1FFF + 124
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	124 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 125
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 125 to memory location 0x1FFF + 125
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	125 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 126
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 126 to memory location 0x1FFF + 126
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	126 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 127
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 127 to memory location 0x1FFF + 127
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	127 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 128
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 128 to memory location 0x1FFF + 128
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	128 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 129
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 129 to memory location 0x1FFF + 129
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	129 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 130
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 130 to memory location 0x1FFF + 130
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	130 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 131
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 131 to memory location 0x1FFF + 131
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	131 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 132
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 132 to memory location 0x1FFF + 132
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	132 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 133
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 133 to memory location 0x1FFF + 133
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	133 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 134
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 134 to memory location 0x1FFF + 134
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	134 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 135
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 135 to memory location 0x1FFF + 135
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	135 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 136
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 136 to memory location 0x1FFF + 136
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	136 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 137
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 137 to memory location 0x1FFF + 137
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	137 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 138
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 138 to memory location 0x1FFF + 138
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	138 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 139
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 139 to memory location 0x1FFF + 139
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	139 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 140
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 140 to memory location 0x1FFF + 140
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	140 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 141
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 141 to memory location 0x1FFF + 141
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	141 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 142
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 142 to memory location 0x1FFF + 142
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	142 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 143
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 143 to memory location 0x1FFF + 143
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	143 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 144
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 144 to memory location 0x1FFF + 144
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	144 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 145
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 145 to memory location 0x1FFF + 145
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	145 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 146
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 146 to memory location 0x1FFF + 146
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	146 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 147
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 147 to memory location 0x1FFF + 147
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	147 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 148
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 148 to memory location 0x1FFF + 148
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	148 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 149
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 149 to memory location 0x1FFF + 149
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	149 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 150
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 150 to memory location 0x1FFF + 150
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	150 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 151
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 151 to memory location 0x1FFF + 151
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	151 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 152
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 152 to memory location 0x1FFF + 152
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	152 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 153
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 153 to memory location 0x1FFF + 153
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	153 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 154
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 154 to memory location 0x1FFF + 154
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	154 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 155
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 155 to memory location 0x1FFF + 155
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	155 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 156
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 156 to memory location 0x1FFF + 156
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	156 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 157
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 157 to memory location 0x1FFF + 157
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	157 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 158
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 158 to memory location 0x1FFF + 158
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	158 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 159
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 159 to memory location 0x1FFF + 159
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	159 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 160
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 160 to memory location 0x1FFF + 160
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	160 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 161
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 161 to memory location 0x1FFF + 161
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	161 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 162
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 162 to memory location 0x1FFF + 162
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	162 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 163
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 163 to memory location 0x1FFF + 163
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	163 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 164
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 164 to memory location 0x1FFF + 164
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	164 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 165
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 165 to memory location 0x1FFF + 165
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	165 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 166
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 166 to memory location 0x1FFF + 166
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	166 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 167
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 167 to memory location 0x1FFF + 167
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	167 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 168
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 168 to memory location 0x1FFF + 168
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	168 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 169
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 169 to memory location 0x1FFF + 169
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	169 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 170
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 170 to memory location 0x1FFF + 170
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	170 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 171
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 171 to memory location 0x1FFF + 171
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	171 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 172
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 172 to memory location 0x1FFF + 172
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	172 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 173
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 173 to memory location 0x1FFF + 173
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	173 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 174
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 174 to memory location 0x1FFF + 174
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	174 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 175
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 175 to memory location 0x1FFF + 175
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	175 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 176
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 176 to memory location 0x1FFF + 176
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	176 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 177
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 177 to memory location 0x1FFF + 177
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	177 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 178
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 178 to memory location 0x1FFF + 178
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	178 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 179
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 179 to memory location 0x1FFF + 179
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	179 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 180
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 180 to memory location 0x1FFF + 180
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	180 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 181
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 181 to memory location 0x1FFF + 181
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	181 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 182
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 182 to memory location 0x1FFF + 182
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	182 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 183
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 183 to memory location 0x1FFF + 183
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	183 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 184
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 184 to memory location 0x1FFF + 184
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	184 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 185
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 185 to memory location 0x1FFF + 185
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	185 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 186
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 186 to memory location 0x1FFF + 186
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	186 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 187
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 187 to memory location 0x1FFF + 187
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	187 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 188
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 188 to memory location 0x1FFF + 188
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	188 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 189
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 189 to memory location 0x1FFF + 189
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	189 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 190
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 190 to memory location 0x1FFF + 190
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	190 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 191
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 191 to memory location 0x1FFF + 191
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	191 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 192
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 192 to memory location 0x1FFF + 192
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	192 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 193
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 193 to memory location 0x1FFF + 193
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	193 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 194
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 194 to memory location 0x1FFF + 194
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	194 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 195
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 195 to memory location 0x1FFF + 195
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	195 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 196
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 196 to memory location 0x1FFF + 196
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	196 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 197
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 197 to memory location 0x1FFF + 197
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	197 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 198
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 198 to memory location 0x1FFF + 198
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	198 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 199
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 199 to memory location 0x1FFF + 199
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	199 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 200
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 200 to memory location 0x1FFF + 200
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	200 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 201
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 201 to memory location 0x1FFF + 201
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	201 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 202
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 202 to memory location 0x1FFF + 202
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	202 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 203
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 203 to memory location 0x1FFF + 203
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	203 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 204
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 204 to memory location 0x1FFF + 204
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	204 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 205
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 205 to memory location 0x1FFF + 205
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	205 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 206
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 206 to memory location 0x1FFF + 206
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	206 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 207
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 207 to memory location 0x1FFF + 207
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	207 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 208
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 208 to memory location 0x1FFF + 208
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	208 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 209
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 209 to memory location 0x1FFF + 209
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	209 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 210
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 210 to memory location 0x1FFF + 210
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	210 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 211
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 211 to memory location 0x1FFF + 211
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	211 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 212
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 212 to memory location 0x1FFF + 212
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	212 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 213
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 213 to memory location 0x1FFF + 213
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	213 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 214
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 214 to memory location 0x1FFF + 214
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	214 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 215
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 215 to memory location 0x1FFF + 215
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	215 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 216
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 216 to memory location 0x1FFF + 216
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	216 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 217
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 217 to memory location 0x1FFF + 217
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	217 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 218
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 218 to memory location 0x1FFF + 218
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	218 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 219
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 219 to memory location 0x1FFF + 219
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	219 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 220
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 220 to memory location 0x1FFF + 220
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	220 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 221
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 221 to memory location 0x1FFF + 221
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	221 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 222
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 222 to memory location 0x1FFF + 222
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	222 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 223
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 223 to memory location 0x1FFF + 223
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	223 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 224
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 224 to memory location 0x1FFF + 224
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	224 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 225
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 225 to memory location 0x1FFF + 225
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	225 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 226
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 226 to memory location 0x1FFF + 226
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	226 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 227
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 227 to memory location 0x1FFF + 227
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	227 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 228
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 228 to memory location 0x1FFF + 228
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	228 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 229
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 229 to memory location 0x1FFF + 229
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	229 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 230
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 230 to memory location 0x1FFF + 230
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	230 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 231
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 231 to memory location 0x1FFF + 231
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	231 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 232
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 232 to memory location 0x1FFF + 232
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	232 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 233
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 233 to memory location 0x1FFF + 233
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	233 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 234
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 234 to memory location 0x1FFF + 234
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	234 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 235
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 235 to memory location 0x1FFF + 235
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	235 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 236
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 236 to memory location 0x1FFF + 236
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	236 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 237
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 237 to memory location 0x1FFF + 237
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	237 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 238
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 238 to memory location 0x1FFF + 238
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	238 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 239
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 239 to memory location 0x1FFF + 239
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	239 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 240
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 240 to memory location 0x1FFF + 240
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	240 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 241
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 241 to memory location 0x1FFF + 241
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	241 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 242
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 242 to memory location 0x1FFF + 242
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	242 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 243
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 243 to memory location 0x1FFF + 243
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	243 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 244
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 244 to memory location 0x1FFF + 244
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	244 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 245
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 245 to memory location 0x1FFF + 245
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	245 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 246
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 246 to memory location 0x1FFF + 246
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	246 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 247
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 247 to memory location 0x1FFF + 247
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	247 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 248
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 248 to memory location 0x1FFF + 248
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	248 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 249
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 249 to memory location 0x1FFF + 249
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	249 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 250
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 250 to memory location 0x1FFF + 250
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	250 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 251
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 251 to memory location 0x1FFF + 251
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	251 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 252
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 252 to memory location 0x1FFF + 252
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	252 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 253
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 253 to memory location 0x1FFF + 253
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	253 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 254
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 254 to memory location 0x1FFF + 254
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	254 is not equal to 255
	PC: 16 --> 8
Instruction: addi $8, $8, 1
	Change $8 to 255
	PC: 8 --> 12
Instruction: sb $8, 0x1FFF($8)
	Move 255 to memory location 0x1FFF + 255
	PC: 12 --> 16
Instruction: bne $8, $9, loop1
	255 is equal to 255
	PC: 16 --> 20
Instruction: addi $8, $8, 1
	Change $8 to 256
	PC: 20 --> 24
Instruction: sb $9, 0x1FFF($8)
	Move 255 to memory location 0x1FFF + 256
	PC: 24 --> 28
Instruction: addi $8, $0, 0
	Change $8 to 0
	PC: 28 --> 32
Instruction: addi $9, $0, 256
	Change $9 to 256
	PC: 32 --> 36
Instruction: addi $15, $0, 4
	Change $15 to 4
	PC: 36 --> 40
Instruction: addi $16, $0, 0
	Change $16 to 0
	PC: 40 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 1
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 1 to $10 from memory location 0x1FFF + 1
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	1 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 2
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 2 to $10 from memory location 0x1FFF + 2
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	2 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 3
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 3 to $10 from memory location 0x1FFF + 3
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	3 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 4
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4 to $10 from memory location 0x1FFF + 4
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	4 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 5
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 5 to $10 from memory location 0x1FFF + 5
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	5 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 6
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 6 to $10 from memory location 0x1FFF + 6
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	6 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 7
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 7 to $10 from memory location 0x1FFF + 7
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	7 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 8
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 8 to $10 from memory location 0x1FFF + 8
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	8 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 9
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 9 to $10 from memory location 0x1FFF + 9
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	9 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 10
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 10 to $10 from memory location 0x1FFF + 10
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	10 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 11
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 11 to $10 from memory location 0x1FFF + 11
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	11 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 12
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 12 to $10 from memory location 0x1FFF + 12
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	12 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 13
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 13 to $10 from memory location 0x1FFF + 13
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	13 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 14
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 14 to $10 from memory location 0x1FFF + 14
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	14 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 15
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 15 to $10 from memory location 0x1FFF + 15
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 1
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	15 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 16
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 16 to $10 from memory location 0x1FFF + 16
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	16 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 17
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 17 to $10 from memory location 0x1FFF + 17
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	17 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 18
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 18 to $10 from memory location 0x1FFF + 18
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	18 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 19
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 19 to $10 from memory location 0x1FFF + 19
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	19 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 20
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 20 to $10 from memory location 0x1FFF + 20
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	20 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 21
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 21 to $10 from memory location 0x1FFF + 21
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	21 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 22
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 22 to $10 from memory location 0x1FFF + 22
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	22 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 23
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 23 to $10 from memory location 0x1FFF + 23
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 2
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	23 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 24
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 24 to $10 from memory location 0x1FFF + 24
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	24 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 25
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 25 to $10 from memory location 0x1FFF + 25
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	25 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 26
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 26 to $10 from memory location 0x1FFF + 26
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	26 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 27
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 27 to $10 from memory location 0x1FFF + 27
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 3
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	27 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 28
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 28 to $10 from memory location 0x1FFF + 28
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	28 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 29
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 29 to $10 from memory location 0x1FFF + 29
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 4
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	29 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 30
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 30 to $10 from memory location 0x1FFF + 30
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 5
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	30 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 31
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 31 to $10 from memory location 0x1FFF + 31
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	31 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 32
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 32 to $10 from memory location 0x1FFF + 32
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	32 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 33
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 33 to $10 from memory location 0x1FFF + 33
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	33 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 34
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 34 to $10 from memory location 0x1FFF + 34
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 17
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	34 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 35
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 35 to $10 from memory location 0x1FFF + 35
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 17
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	35 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 36
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 36 to $10 from memory location 0x1FFF + 36
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 18
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	36 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 37
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 37 to $10 from memory location 0x1FFF + 37
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 18
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	37 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 38
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 38 to $10 from memory location 0x1FFF + 38
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 19
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	38 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 39
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 39 to $10 from memory location 0x1FFF + 39
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 19
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 6
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	39 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 40
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 40 to $10 from memory location 0x1FFF + 40
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 20
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	40 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 41
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 41 to $10 from memory location 0x1FFF + 41
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 20
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	41 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 42
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 42 to $10 from memory location 0x1FFF + 42
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 21
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	42 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 43
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 43 to $10 from memory location 0x1FFF + 43
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 21
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 7
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	43 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 44
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 44 to $10 from memory location 0x1FFF + 44
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 22
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	44 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 45
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 45 to $10 from memory location 0x1FFF + 45
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 22
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 8
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	45 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 46
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 46 to $10 from memory location 0x1FFF + 46
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 23
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 9
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	46 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 47
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 47 to $10 from memory location 0x1FFF + 47
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 23
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	47 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 48
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 48 to $10 from memory location 0x1FFF + 48
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 24
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	48 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 49
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 49 to $10 from memory location 0x1FFF + 49
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 24
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	49 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 50
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 50 to $10 from memory location 0x1FFF + 50
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 25
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	50 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 51
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 51 to $10 from memory location 0x1FFF + 51
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 25
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 10
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	51 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 52
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 52 to $10 from memory location 0x1FFF + 52
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 26
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	52 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 53
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 53 to $10 from memory location 0x1FFF + 53
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 26
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 11
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	53 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 54
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 54 to $10 from memory location 0x1FFF + 54
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 27
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 12
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	54 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 55
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 55 to $10 from memory location 0x1FFF + 55
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 27
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	55 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 56
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 56 to $10 from memory location 0x1FFF + 56
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 28
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	56 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 57
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 57 to $10 from memory location 0x1FFF + 57
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 28
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 13
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	57 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 58
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 58 to $10 from memory location 0x1FFF + 58
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 29
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 14
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	58 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 59
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 59 to $10 from memory location 0x1FFF + 59
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 29
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	59 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 60
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 60 to $10 from memory location 0x1FFF + 60
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 30
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 15
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	60 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 61
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 61 to $10 from memory location 0x1FFF + 61
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 30
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	61 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 62
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 62 to $10 from memory location 0x1FFF + 62
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 31
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	62 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 63
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 63 to $10 from memory location 0x1FFF + 63
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 31
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	63 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 64
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 64 to $10 from memory location 0x1FFF + 64
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 32
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	64 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 65
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 65 to $10 from memory location 0x1FFF + 65
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 32
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	65 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 66
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 66 to $10 from memory location 0x1FFF + 66
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	66 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 67
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 67 to $10 from memory location 0x1FFF + 67
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	67 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 68
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 68 to $10 from memory location 0x1FFF + 68
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 34
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 17
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	68 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 69
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 69 to $10 from memory location 0x1FFF + 69
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 34
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 17
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	69 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 70
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 70 to $10 from memory location 0x1FFF + 70
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 35
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 17
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	70 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 71
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 71 to $10 from memory location 0x1FFF + 71
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 35
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 17
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 8
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 16
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	71 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 72
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 72 to $10 from memory location 0x1FFF + 72
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 36
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 18
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	72 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 73
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 73 to $10 from memory location 0x1FFF + 73
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 36
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 18
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	73 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 74
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 74 to $10 from memory location 0x1FFF + 74
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 37
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 18
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	74 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 75
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 75 to $10 from memory location 0x1FFF + 75
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 37
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 18
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 17
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	75 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 76
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 76 to $10 from memory location 0x1FFF + 76
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 38
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 19
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	76 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 77
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 77 to $10 from memory location 0x1FFF + 77
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 38
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 19
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 18
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	77 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 78
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 78 to $10 from memory location 0x1FFF + 78
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 39
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 19
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 19
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	78 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 79
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 79 to $10 from memory location 0x1FFF + 79
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 39
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 19
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 9
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 4
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	79 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 80
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 80 to $10 from memory location 0x1FFF + 80
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 40
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 20
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	80 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 81
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 81 to $10 from memory location 0x1FFF + 81
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 40
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 20
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	81 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 82
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 82 to $10 from memory location 0x1FFF + 82
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 41
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 20
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	82 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 83
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 83 to $10 from memory location 0x1FFF + 83
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 41
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 20
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 20
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	83 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 84
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 84 to $10 from memory location 0x1FFF + 84
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 42
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 21
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	84 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 85
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 85 to $10 from memory location 0x1FFF + 85
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 42
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 21
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 21
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	85 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 86
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 86 to $10 from memory location 0x1FFF + 86
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 43
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 21
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 22
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	86 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 87
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 87 to $10 from memory location 0x1FFF + 87
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 43
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 21
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 10
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	87 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 88
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 88 to $10 from memory location 0x1FFF + 88
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 44
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 22
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	88 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 89
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 89 to $10 from memory location 0x1FFF + 89
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 44
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 22
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 23
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	89 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 90
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 90 to $10 from memory location 0x1FFF + 90
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 45
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 22
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 24
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	90 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 91
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 91 to $10 from memory location 0x1FFF + 91
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 45
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 22
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	91 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 92
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 92 to $10 from memory location 0x1FFF + 92
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 46
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 23
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 25
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	92 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 93
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 93 to $10 from memory location 0x1FFF + 93
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 46
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 23
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	93 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 94
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 94 to $10 from memory location 0x1FFF + 94
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 47
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 23
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	94 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 95
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 95 to $10 from memory location 0x1FFF + 95
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 47
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 23
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 11
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 5
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	95 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 96
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 96 to $10 from memory location 0x1FFF + 96
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 48
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 24
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	96 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 97
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 97 to $10 from memory location 0x1FFF + 97
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 48
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 24
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	97 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 98
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 98 to $10 from memory location 0x1FFF + 98
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 49
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 24
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	98 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 99
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 99 to $10 from memory location 0x1FFF + 99
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 49
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 24
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 26
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	99 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 100
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 100 to $10 from memory location 0x1FFF + 100
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 50
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 25
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	100 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 101
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 101 to $10 from memory location 0x1FFF + 101
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 50
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 25
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 27
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	101 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 102
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 102 to $10 from memory location 0x1FFF + 102
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 51
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 25
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 28
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	102 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 103
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 103 to $10 from memory location 0x1FFF + 103
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 51
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 25
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 12
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	103 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 104
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 104 to $10 from memory location 0x1FFF + 104
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 52
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 26
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	104 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 105
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 105 to $10 from memory location 0x1FFF + 105
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 52
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 26
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 29
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	105 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 106
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 106 to $10 from memory location 0x1FFF + 106
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 53
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 26
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 30
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	106 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 107
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 107 to $10 from memory location 0x1FFF + 107
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 53
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 26
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	107 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 108
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 108 to $10 from memory location 0x1FFF + 108
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 54
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 27
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 31
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	108 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 109
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 109 to $10 from memory location 0x1FFF + 109
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 54
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 27
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	109 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 110
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 110 to $10 from memory location 0x1FFF + 110
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 55
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 27
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	110 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 111
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 111 to $10 from memory location 0x1FFF + 111
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 55
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 27
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 13
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 6
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	111 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 112
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 112 to $10 from memory location 0x1FFF + 112
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 56
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 28
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	112 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 113
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 113 to $10 from memory location 0x1FFF + 113
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 56
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 28
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 32
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	113 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 114
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 114 to $10 from memory location 0x1FFF + 114
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 57
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 28
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 33
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	114 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 115
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 115 to $10 from memory location 0x1FFF + 115
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 57
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 28
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	115 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 116
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 116 to $10 from memory location 0x1FFF + 116
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 58
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 29
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 34
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	116 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 117
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 117 to $10 from memory location 0x1FFF + 117
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 58
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 29
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	117 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 118
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 118 to $10 from memory location 0x1FFF + 118
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 59
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 29
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	118 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 119
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 119 to $10 from memory location 0x1FFF + 119
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 59
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 29
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 14
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	119 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 120
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 120 to $10 from memory location 0x1FFF + 120
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 60
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 30
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 35
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	120 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 121
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 121 to $10 from memory location 0x1FFF + 121
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 60
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 30
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	121 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 122
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 122 to $10 from memory location 0x1FFF + 122
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 61
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 30
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	122 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 123
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 123 to $10 from memory location 0x1FFF + 123
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 61
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 30
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	123 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 124
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 124 to $10 from memory location 0x1FFF + 124
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 62
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 31
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	124 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 125
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 125 to $10 from memory location 0x1FFF + 125
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 62
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 31
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	125 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 126
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 126 to $10 from memory location 0x1FFF + 126
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 63
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 31
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	126 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 127
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 127 to $10 from memory location 0x1FFF + 127
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 63
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 31
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 15
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 7
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 3
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 0
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	127 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 128
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967168 to $10 from memory location 0x1FFF + 128
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483584
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741792
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	1 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	128 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 129
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967169 to $10 from memory location 0x1FFF + 129
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483584
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741792
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	129 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 130
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967170 to $10 from memory location 0x1FFF + 130
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483585
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741792
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	130 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 131
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967171 to $10 from memory location 0x1FFF + 131
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483585
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741792
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	131 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 132
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967172 to $10 from memory location 0x1FFF + 132
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483586
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741793
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	132 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 133
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967173 to $10 from memory location 0x1FFF + 133
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483586
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741793
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	133 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 134
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967174 to $10 from memory location 0x1FFF + 134
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483587
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741793
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	134 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 135
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967175 to $10 from memory location 0x1FFF + 135
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483587
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741793
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870896
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 36
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	135 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 136
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967176 to $10 from memory location 0x1FFF + 136
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483588
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741794
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	136 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 137
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967177 to $10 from memory location 0x1FFF + 137
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483588
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741794
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	137 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 138
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967178 to $10 from memory location 0x1FFF + 138
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483589
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741794
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	138 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 139
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967179 to $10 from memory location 0x1FFF + 139
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483589
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741794
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 37
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	139 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 140
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967180 to $10 from memory location 0x1FFF + 140
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483590
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741795
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	140 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 141
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967181 to $10 from memory location 0x1FFF + 141
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483590
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741795
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 38
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	141 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 142
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967182 to $10 from memory location 0x1FFF + 142
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483591
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741795
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 39
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	142 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 143
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967183 to $10 from memory location 0x1FFF + 143
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483591
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741795
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870897
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435448
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	143 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 144
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967184 to $10 from memory location 0x1FFF + 144
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483592
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741796
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	144 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 145
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967185 to $10 from memory location 0x1FFF + 145
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483592
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741796
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	145 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 146
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967186 to $10 from memory location 0x1FFF + 146
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483593
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741796
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	146 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 147
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967187 to $10 from memory location 0x1FFF + 147
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483593
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741796
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 40
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	147 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 148
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967188 to $10 from memory location 0x1FFF + 148
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483594
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741797
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	148 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 149
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967189 to $10 from memory location 0x1FFF + 149
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483594
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741797
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 41
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	149 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 150
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967190 to $10 from memory location 0x1FFF + 150
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483595
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741797
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 42
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	150 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 151
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967191 to $10 from memory location 0x1FFF + 151
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483595
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741797
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870898
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	151 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 152
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967192 to $10 from memory location 0x1FFF + 152
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483596
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741798
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	152 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 153
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967193 to $10 from memory location 0x1FFF + 153
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483596
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741798
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 43
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	153 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 154
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967194 to $10 from memory location 0x1FFF + 154
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483597
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741798
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 44
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	154 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 155
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967195 to $10 from memory location 0x1FFF + 155
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483597
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741798
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	155 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 156
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967196 to $10 from memory location 0x1FFF + 156
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483598
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741799
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 45
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	156 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 157
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967197 to $10 from memory location 0x1FFF + 157
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483598
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741799
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	157 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 158
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967198 to $10 from memory location 0x1FFF + 158
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483599
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741799
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	158 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 159
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967199 to $10 from memory location 0x1FFF + 159
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483599
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741799
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870899
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435449
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217724
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	159 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 160
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967200 to $10 from memory location 0x1FFF + 160
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483600
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741800
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	160 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 161
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967201 to $10 from memory location 0x1FFF + 161
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483600
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741800
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	161 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 162
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967202 to $10 from memory location 0x1FFF + 162
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483601
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741800
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	162 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 163
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967203 to $10 from memory location 0x1FFF + 163
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483601
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741800
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 46
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	163 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 164
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967204 to $10 from memory location 0x1FFF + 164
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483602
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741801
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	164 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 165
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967205 to $10 from memory location 0x1FFF + 165
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483602
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741801
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 47
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	165 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 166
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967206 to $10 from memory location 0x1FFF + 166
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483603
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741801
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 48
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	166 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 167
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967207 to $10 from memory location 0x1FFF + 167
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483603
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741801
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870900
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	167 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 168
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967208 to $10 from memory location 0x1FFF + 168
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483604
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741802
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	168 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 169
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967209 to $10 from memory location 0x1FFF + 169
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483604
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741802
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 49
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	169 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 170
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967210 to $10 from memory location 0x1FFF + 170
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483605
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741802
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 50
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	170 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 171
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967211 to $10 from memory location 0x1FFF + 171
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483605
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741802
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	171 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 172
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967212 to $10 from memory location 0x1FFF + 172
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483606
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741803
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 51
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	172 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 173
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967213 to $10 from memory location 0x1FFF + 173
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483606
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741803
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	173 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 174
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967214 to $10 from memory location 0x1FFF + 174
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483607
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741803
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	174 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 175
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967215 to $10 from memory location 0x1FFF + 175
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483607
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741803
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870901
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435450
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	175 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 176
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967216 to $10 from memory location 0x1FFF + 176
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483608
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741804
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	176 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 177
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967217 to $10 from memory location 0x1FFF + 177
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483608
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741804
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 52
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	177 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 178
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967218 to $10 from memory location 0x1FFF + 178
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483609
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741804
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 53
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	178 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 179
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967219 to $10 from memory location 0x1FFF + 179
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483609
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741804
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	179 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 180
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967220 to $10 from memory location 0x1FFF + 180
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483610
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741805
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 54
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	180 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 181
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967221 to $10 from memory location 0x1FFF + 181
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483610
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741805
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	181 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 182
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967222 to $10 from memory location 0x1FFF + 182
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483611
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741805
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	182 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 183
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967223 to $10 from memory location 0x1FFF + 183
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483611
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741805
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870902
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	183 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 184
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967224 to $10 from memory location 0x1FFF + 184
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483612
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741806
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 55
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	184 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 185
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967225 to $10 from memory location 0x1FFF + 185
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483612
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741806
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	185 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 186
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967226 to $10 from memory location 0x1FFF + 186
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483613
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741806
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	186 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 187
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967227 to $10 from memory location 0x1FFF + 187
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483613
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741806
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	187 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 188
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967228 to $10 from memory location 0x1FFF + 188
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483614
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741807
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	188 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 189
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967229 to $10 from memory location 0x1FFF + 189
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483614
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741807
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	189 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 190
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967230 to $10 from memory location 0x1FFF + 190
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483615
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741807
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	190 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 191
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967231 to $10 from memory location 0x1FFF + 191
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483615
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741807
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870903
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435451
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217725
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108862
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	191 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 192
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967232 to $10 from memory location 0x1FFF + 192
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483616
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741808
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	2 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	192 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 193
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967233 to $10 from memory location 0x1FFF + 193
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483616
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741808
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	193 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 194
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967234 to $10 from memory location 0x1FFF + 194
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483617
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741808
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	194 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 195
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967235 to $10 from memory location 0x1FFF + 195
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483617
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741808
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 56
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	195 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 196
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967236 to $10 from memory location 0x1FFF + 196
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483618
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741809
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	196 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 197
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967237 to $10 from memory location 0x1FFF + 197
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483618
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741809
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 57
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	197 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 198
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967238 to $10 from memory location 0x1FFF + 198
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483619
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741809
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 58
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	198 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 199
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967239 to $10 from memory location 0x1FFF + 199
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483619
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741809
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870904
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	199 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 200
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967240 to $10 from memory location 0x1FFF + 200
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483620
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741810
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	200 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 201
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967241 to $10 from memory location 0x1FFF + 201
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483620
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741810
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 59
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	201 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 202
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967242 to $10 from memory location 0x1FFF + 202
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483621
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741810
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 60
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	202 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 203
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967243 to $10 from memory location 0x1FFF + 203
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483621
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741810
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	203 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 204
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967244 to $10 from memory location 0x1FFF + 204
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483622
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741811
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 61
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	204 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 205
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967245 to $10 from memory location 0x1FFF + 205
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483622
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741811
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	205 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 206
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967246 to $10 from memory location 0x1FFF + 206
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483623
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741811
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	206 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 207
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967247 to $10 from memory location 0x1FFF + 207
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483623
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741811
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870905
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435452
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	207 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 208
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967248 to $10 from memory location 0x1FFF + 208
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483624
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741812
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	208 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 209
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967249 to $10 from memory location 0x1FFF + 209
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483624
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741812
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 62
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	209 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 210
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967250 to $10 from memory location 0x1FFF + 210
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483625
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741812
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 63
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	210 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 211
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967251 to $10 from memory location 0x1FFF + 211
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483625
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741812
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	211 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 212
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967252 to $10 from memory location 0x1FFF + 212
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483626
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741813
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 64
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	212 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 213
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967253 to $10 from memory location 0x1FFF + 213
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483626
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741813
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	213 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 214
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967254 to $10 from memory location 0x1FFF + 214
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483627
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741813
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	214 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 215
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967255 to $10 from memory location 0x1FFF + 215
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483627
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741813
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870906
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	215 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 216
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967256 to $10 from memory location 0x1FFF + 216
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483628
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741814
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 65
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	216 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 217
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967257 to $10 from memory location 0x1FFF + 217
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483628
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741814
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	217 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 218
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967258 to $10 from memory location 0x1FFF + 218
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483629
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741814
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	218 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 219
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967259 to $10 from memory location 0x1FFF + 219
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483629
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741814
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	219 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 220
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967260 to $10 from memory location 0x1FFF + 220
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483630
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741815
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	220 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 221
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967261 to $10 from memory location 0x1FFF + 221
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483630
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741815
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	221 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 222
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967262 to $10 from memory location 0x1FFF + 222
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483631
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741815
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	222 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 223
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967263 to $10 from memory location 0x1FFF + 223
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483631
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741815
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870907
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435453
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217726
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	223 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 224
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967264 to $10 from memory location 0x1FFF + 224
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483632
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741816
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	3 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	224 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 225
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967265 to $10 from memory location 0x1FFF + 225
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483632
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741816
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 66
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	225 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 226
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967266 to $10 from memory location 0x1FFF + 226
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483633
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741816
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 67
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	226 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 227
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967267 to $10 from memory location 0x1FFF + 227
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483633
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741816
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	227 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 228
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967268 to $10 from memory location 0x1FFF + 228
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483634
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741817
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 68
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	228 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 229
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967269 to $10 from memory location 0x1FFF + 229
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483634
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741817
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	229 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 230
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967270 to $10 from memory location 0x1FFF + 230
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483635
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741817
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	230 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 231
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967271 to $10 from memory location 0x1FFF + 231
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483635
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741817
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870908
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	231 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 232
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967272 to $10 from memory location 0x1FFF + 232
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483636
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741818
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 69
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	232 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 233
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967273 to $10 from memory location 0x1FFF + 233
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483636
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741818
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	233 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 234
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967274 to $10 from memory location 0x1FFF + 234
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483637
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741818
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	234 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 235
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967275 to $10 from memory location 0x1FFF + 235
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483637
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741818
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	235 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 236
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967276 to $10 from memory location 0x1FFF + 236
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483638
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741819
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	236 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 237
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967277 to $10 from memory location 0x1FFF + 237
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483638
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741819
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	237 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 238
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967278 to $10 from memory location 0x1FFF + 238
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483639
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741819
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	238 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 239
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967279 to $10 from memory location 0x1FFF + 239
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483639
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741819
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870909
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435454
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	239 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 240
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967280 to $10 from memory location 0x1FFF + 240
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483640
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741820
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	4 is equal to 4
	PC: 88 --> 92
Instruction: addi $16, $16, 1
	Change $16 to 70
	PC: 92 --> 96
Instruction: bne $8, $9, loop2
	240 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 241
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967281 to $10 from memory location 0x1FFF + 241
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483640
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741820
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	241 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 242
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967282 to $10 from memory location 0x1FFF + 242
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483641
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741820
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	242 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 243
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967283 to $10 from memory location 0x1FFF + 243
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483641
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741820
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	243 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 244
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967284 to $10 from memory location 0x1FFF + 244
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483642
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741821
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	244 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 245
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967285 to $10 from memory location 0x1FFF + 245
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483642
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741821
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	245 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 246
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967286 to $10 from memory location 0x1FFF + 246
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483643
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741821
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	246 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 247
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967287 to $10 from memory location 0x1FFF + 247
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483643
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741821
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870910
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	247 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 248
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967288 to $10 from memory location 0x1FFF + 248
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483644
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741822
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	5 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	248 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 249
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967289 to $10 from memory location 0x1FFF + 249
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483644
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741822
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	249 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 250
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967290 to $10 from memory location 0x1FFF + 250
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483645
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741822
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	250 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 251
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967291 to $10 from memory location 0x1FFF + 251
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483645
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741822
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	251 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 252
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967292 to $10 from memory location 0x1FFF + 252
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483646
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741823
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	6 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	252 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 253
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967293 to $10 from memory location 0x1FFF + 253
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483646
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741823
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	253 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 254
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967294 to $10 from memory location 0x1FFF + 254
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 0
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	0 is equal to 0
	PC: 68 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483647
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741823
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	7 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	254 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 255
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967295 to $10 from memory location 0x1FFF + 255
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483647
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741823
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 8
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	8 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	255 is not equal to 256
	PC: 96 --> 44
Instruction: addi $8, $8, 1
	Change $8 to 256
	PC: 44 --> 48
Instruction: lb $10, 0x1FFF($8)
	Move 4294967295 to $10 from memory location 0x1FFF + 256
	PC: 48 --> 52
Instruction: addi $13, $0, 0
	Change $13 to 0
	PC: 52 --> 56
Instruction: addi $11, $0, 0
	Change $11 to 0
	PC: 56 --> 60
Instruction: addi $12, $0, 8
	Change $12 to 8
	PC: 60 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 1
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 2147483647
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 1
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	1 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 2
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 1073741823
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 2
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	2 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 3
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 536870911
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 3
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	3 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 4
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 268435455
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 4
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	4 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 5
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 134217727
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 5
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	5 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 6
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 67108863
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 6
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	6 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 7
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 33554431
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 7
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	7 is not equal to 8
	PC: 84 --> 64
Instruction: andi $14, $10, 1
	Change $14 to 1
	PC: 64 --> 68
Instruction: beq $14, $0, skip1
	1 is not equal to 0
	PC: 68 --> 72
Instruction: addi $13, $13, 1
	Change $13 to 8
	PC: 72 --> 76
Instruction: srl $10, $10, 1
	Change $10 to 16777215
	PC: 76 --> 80
Instruction: addi $11, $11, 1
	Change $11 to 8
	PC: 80 --> 84
Instruction: bne $11, $12, loop3
	8 is equal to 8
	PC: 84 --> 88
Instruction: bne $13, $15, skip2
	8 is not equal to 4
	PC: 88 --> 96
Instruction: bne $8, $9, loop2
	256 is equal to 256
	PC: 96 --> 100
ECE 366 Project 2
Created by: Zhongy Chen, Chris Nyauchi, and Claire Chappee
Output for testcase.asm
****************************************************
$0 --> 0
$8 --> 256
$9 --> 256
$10 --> 16777215
$11 --> 8
$12 --> 8
$13 --> 8
$14 --> 1
$15 --> 4
$16 --> 70
$17 --> 0
$18 --> 0
$19 --> 0
$20 --> 0
$21 --> 0
$22 --> 0
$23 --> 0
pc --> 100
hi --> 0
lo --> 0
****************************************************
The memory contents of 0x2000 - 0x225C are:
    67305985    134678021    202050057    269422093    336794129    404166165    471538201    538910237 
   606282273    673654309    741026345    808398381    875770417    943142453   1010514489   1077886525 
  1145258561   1212630597   1280002633   1347374669   1414746705   1482118741   1549490777   1616862813 
  1684234849   1751606885   1818978921   1886350957   1953722993   2021095029   2088467065  -2139128195 
 -2071756159  -2004384123  -1937012087  -1869640051  -1802268015  -1734895979  -1667523943  -1600151907 
 -1532779871  -1465407835  -1398035799  -1330663763  -1263291727  -1195919691  -1128547655  -1061175619 
  -993803583   -926431547   -859059511   -791687475   -724315439   -656943403   -589571367   -522199331 
  -454827295   -387455259   -320083223   -252711187   -185339151   -117967115    -50595079         -259 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
           0            0            0            0            0            0            0            0 
****************************************************
Dynamic Instruction Count --> 13907
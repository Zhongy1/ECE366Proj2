Instruction: lui $8, 0xFA19
	Change $8 to -99024896
	PC: 0 --> 4
Instruction: ori $8, $8, 0xE366
	Change $8 to -98966682
	PC: 4 --> 8
Instruction: addi $16, $0, 4
	Change $16 to 4
	PC: 8 --> 12
Instruction: addi $17, $0, 404
	Change $17 to 404
	PC: 12 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 1
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 1 and -98966682
	Store lower half (-98966682) to register lo
	Store upper half (0) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 0 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -98966682 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4196000614
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4196000614 and -98966682
	Store lower half (1810500772) to register lo
	Store upper half (-195652927) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -195652927 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1810500772 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2679938661
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2679938661 and -98966682
	Store lower half (-8934594) to register lo
	Store upper half (-1676781059) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1676781059 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -8934594 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1668936387
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1668936387 and -98966682
	Store lower half (-404446542) to register lo
	Store upper half (1630479959) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1630479959 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -404446542 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2261484773
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2261484773 and -98966682
	Store lower half (-934608322) to register lo
	Store upper half (-2085592733) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -2085592733 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -934608322 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1274766173
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 19451
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 25437
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 10406
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 40
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 166
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 142
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 142 to memory location 0x201C + 4
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 8
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	8 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 2
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 2 and -98966682
	Store lower half (-197933364) to register lo
	Store upper half (1) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 1 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -197933364 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4097033933
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4097033933 and -98966682
	Store lower half (-772932434) to register lo
	Store upper half (-292339171) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -292339171 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -772932434 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1065270963
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1065270963 and -98966682
	Store lower half (487830610) to register lo
	Store upper half (1040724482) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1040724482 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 487830610 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 589006416
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 589006416 and -98966682
	Store lower half (-1562348576) to register lo
	Store upper half (575434249) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 575434249 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1562348576 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2158763497
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2158763497 and -98966682
	Store lower half (1490716118) to register lo
	Store upper half (2109020240) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 2109020240 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1490716118 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 628071814
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 9583
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 40326
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 47337
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 184
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 233
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 81
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 81 to memory location 0x201C + 8
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 12
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	12 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 3
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 3 and -98966682
	Store lower half (-296900046) to register lo
	Store upper half (2) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 2 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -296900046 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3998067248
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3998067248 and -98966682
	Store lower half (1334468384) to register lo
	Store upper half (-389025418) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -389025418 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1334468384 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2806361686
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2806361686 and -98966682
	Store lower half (1908389956) to register lo
	Store upper half (-1553271133) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1553271133 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1908389956 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3537194727
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3537194727 and -98966682
	Store lower half (1887651082) to register lo
	Store upper half (-839278295) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -839278295 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1887651082 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3178947619
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3178947619 and -98966682
	Store lower half (-324210958) to register lo
	Store upper half (-1189270503) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1189270503 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -324210958 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1437713131
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 21937
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 49899
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 38746
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 151
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 90
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 205
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 205 to memory location 0x201C + 12
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 16
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	16 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 4
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 4 and -98966682
	Store lower half (-395866728) to register lo
	Store upper half (3) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 3 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -395866728 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3899100571
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3899100571 and -98966682
	Store lower half (-1644831550) to register lo
	Store upper half (-485711658) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -485711658 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1644831550 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2130279444
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2130279444 and -98966682
	Store lower half (1986079736) to register lo
	Store upper half (2081192530) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 2081192530 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1986079736 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 174936490
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 174936490 and -98966682
	Store lower half (345130940) to register lo
	Store upper half (170905520) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 170905520 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 345130940 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 515737612
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 515737612 and -98966682
	Store lower half (1347606728) to register lo
	Store upper half (503853740) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 503853740 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1347606728 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1314581092
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 20058
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 60004
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 42046
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 164
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 62
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 154
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 154 to memory location 0x201C + 16
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 20
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	20 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 5
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 5 and -98966682
	Store lower half (-494833410) to register lo
	Store upper half (4) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 4 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -494833410 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3800133882
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3800133882 and -98966682
	Store lower half (858435996) to register lo
	Store upper half (-582397909) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -582397909 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 858435996 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3999523255
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3999523255 and -98966682
	Store lower half (1305490410) to register lo
	Store upper half (-387602961) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -387602961 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1305490410 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2771752453
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2771752453 and -98966682
	Store lower half (-539151106) to register lo
	Store upper half (-1587082884) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1587082884 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -539151106 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2126134658
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2126134658 and -98966682
	Store lower half (-1737439284) to register lo
	Store upper half (2077143250) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 2077143250 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1737439284 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3820910366
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 58302
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 30494
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 38048
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 148
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 160
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 52
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 52 to memory location 0x201C + 20
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 24
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	24 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 6
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 6 and -98966682
	Store lower half (-593800092) to register lo
	Store upper half (5) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 5 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -593800092 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3701167201
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3701167201 and -98966682
	Store lower half (-1724997210) to register lo
	Store upper half (-679084153) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -679084153 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1724997210 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1319853601
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1319853601 and -98966682
	Store lower half (-1208499162) to register lo
	Store upper half (1289440905) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1289440905 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1208499162 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4214000303
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4214000303 and -98966682
	Store lower half (63925946) to register lo
	Store upper half (-178067995) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -178067995 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 63925946 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 4138568543
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 4138568543 and -98966682
	Store lower half (-1912486694) to register lo
	Store upper half (-251761621) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -251761621 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1912486694 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2130684145
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 32511
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 43249
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 54798
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 214
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 14
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 216
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 216 to memory location 0x201C + 24
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 28
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	28 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 7
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 7 and -98966682
	Store lower half (-692766774) to register lo
	Store upper half (6) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 6 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -692766774 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3602200524
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3602200524 and -98966682
	Store lower half (-409329848) to register lo
	Store upper half (-775770393) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -775770393 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -409329848 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 911782319
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 911782319 and -98966682
	Store lower half (-1929643846) to register lo
	Store upper half (890772596) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 890772596 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1929643846 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3118720206
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3118720206 and -98966682
	Store lower half (-1462905836) to register lo
	Store upper half (-1248110127) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1248110127 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1462905836 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 492211653
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 492211653 and -98966682
	Store lower half (-1435554946) to register lo
	Store upper half (480869877) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 480869877 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1435554946 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3066451595
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 46790
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 22155
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 57421
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 224
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 77
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 173
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 173 to memory location 0x201C + 28
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 32
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	32 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 8
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 8 and -98966682
	Store lower half (-791733456) to register lo
	Store upper half (7) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 7 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -791733456 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3503233847
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3503233847 and -98966682
	Store lower half (906337514) to register lo
	Store upper half (-872456632) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -872456632 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 906337514 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 4261069474
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 4261069474 and -98966682
	Store lower half (-1034866036) to register lo
	Store upper half (-132083415) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -132083415 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1034866036 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 980525989
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 980525989 and -98966682
	Store lower half (712999614) to register lo
	Store upper half (957932242) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 957932242 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 712999614 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 325541996
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 325541996 and -98966682
	Store lower half (1211903752) to register lo
	Store upper half (318040702) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 318040702 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1211903752 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1523107190
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 23240
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 50550
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 40894
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 159
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 190
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 33
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 33 to memory location 0x201C + 32
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 36
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	36 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 9
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 9 and -98966682
	Store lower half (-890700138) to register lo
	Store upper half (8) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 8 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -890700138 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3404267166
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3404267166 and -98966682
	Store lower half (-1677095692) to register lo
	Store upper half (-969142876) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -969142876 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1677095692 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1513455952
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1513455952 and -98966682
	Store lower half (600536544) to register lo
	Store upper half (1478582179) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1478582179 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 600536544 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2078943811
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2078943811 and -98966682
	Store lower half (-1856946254) to register lo
	Store upper half (2031039797) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 2031039797 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1856946254 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3898477191
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3898477191 and -98966682
	Store lower half (-704846134) to register lo
	Store upper half (-486320674) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -486320674 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -704846134 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 922727188
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 14079
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 45844
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 34283
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 133
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 235
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 110
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 110 to memory location 0x201C + 36
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 40
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	40 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 10
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 10 and -98966682
	Store lower half (-989666820) to register lo
	Store upper half (9) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 9 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -989666820 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3305300469
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3305300469 and -98966682
	Store lower half (1617905310) to register lo
	Store upper half (-1065829135) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1065829135 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1617905310 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2685925999
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2685925999 and -98966682
	Store lower half (-411749062) to register lo
	Store upper half (-1670931684) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1670931684 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -411749062 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2064821798
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2064821798 and -98966682
	Store lower half (-1215097564) to register lo
	Store upper half (2017243190) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 2017243190 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1215097564 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3484394770
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3484394770 and -98966682
	Store lower half (840743724) to register lo
	Store upper half (-890861610) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -890861610 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 840743724 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4177149178
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 63738
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 15610
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 50176
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 196
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 0
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 196
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 196 to memory location 0x201C + 40
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 44
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	44 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 11
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 11 and -98966682
	Store lower half (-1088633502) to register lo
	Store upper half (10) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 10 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1088633502 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3206333800
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3206333800 and -98966682
	Store lower half (2141839216) to register lo
	Store upper half (-1162515367) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1162515367 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 2141839216 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3306992425
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3306992425 and -98966682
	Store lower half (-2058502826) to register lo
	Store upper half (-1064176166) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1064176166 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -2058502826 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1172064396
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1172064396 and -98966682
	Store lower half (-138081336) to register lo
	Store upper half (1145057129) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1145057129 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -138081336 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3011847329
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3011847329 and -98966682
	Store lower half (1681939238) to register lo
	Store upper half (-1352520388) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1352520388 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1681939238 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3408033306
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 52002
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 30234
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 48440
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 189
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 56
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 133
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 133 to memory location 0x201C + 44
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 48
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	48 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 12
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 12 and -98966682
	Store lower half (-1187600184) to register lo
	Store upper half (11) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 11 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1187600184 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3107367107
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3107367107 and -98966682
	Store lower half (746006194) to register lo
	Store upper half (-1259201622) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1259201622 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 746006194 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2558868760
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2558868760 and -98966682
	Store lower half (1369087888) to register lo
	Store upper half (-1795061209) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1795061209 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1369087888 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3298497975
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3298497975 and -98966682
	Store lower half (-1360335894) to register lo
	Store upper half (-1072474883) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1072474883 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1360335894 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1861861143
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1861861143 and -98966682
	Store lower half (-885880790) to register lo
	Store upper half (1818959251) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1818959251 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -885880790 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2807666105
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 42841
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 38329
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 13024
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 50
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 224
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 210
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 210 to memory location 0x201C + 48
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 52
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	52 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 13
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 13 and -98966682
	Store lower half (-1286566866) to register lo
	Store upper half (12) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 12 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1286566866 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3008400418
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3008400418 and -98966682
	Store lower half (-1045693556) to register lo
	Store upper half (-1355887874) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1355887874 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1045693556 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1854222706
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1854222706 and -98966682
	Store lower half (1275840876) to register lo
	Store upper half (1811496823) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1811496823 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1275840876 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 670234139
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 670234139 and -98966682
	Store lower half (-1045758014) to register lo
	Store upper half (654790284) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 654790284 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1045758014 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3870142798
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3870142798 and -98966682
	Store lower half (1779093268) to register lo
	Store upper half (-514002172) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -514002172 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1779093268 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2337684496
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 35670
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 15376
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 46918
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 183
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 70
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 241
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 241 to memory location 0x201C + 52
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 56
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	56 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 14
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 14 and -98966682
	Store lower half (-1385533548) to register lo
	Store upper half (13) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 13 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1385533548 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2909433753
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2909433753 and -98966682
	Store lower half (-917626378) to register lo
	Store upper half (-1452574102) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1452574102 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -917626378 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1613061020
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1613061020 and -98966682
	Store lower half (-1185295320) to register lo
	Store upper half (1575892099) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1575892099 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1185295320 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3837255851
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3837255851 and -98966682
	Store lower half (472786210) to register lo
	Store upper half (-546131322) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -546131322 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 472786210 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3277625252
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3277625252 and -98966682
	Store lower half (-396437672) to register lo
	Store upper half (-1092866647) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1092866647 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -396437672 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1451424497
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 22146
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 64241
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 44147
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 172
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 115
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 223
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 223 to memory location 0x201C + 56
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 60
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	60 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 15
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 15 and -98966682
	Store lower half (-1484500230) to register lo
	Store upper half (14) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 14 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1484500230 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2810467060
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2810467060 and -98966682
	Store lower half (1981507896) to register lo
	Store upper half (-1549260357) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1549260357 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1981507896 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3585294467
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3585294467 and -98966682
	Store lower half (1382735154) to register lo
	Store upper half (-792286892) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -792286892 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1382735154 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2192340070
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2192340070 and -98966682
	Store lower half (-169684316) to register lo
	Store upper half (2141823125) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 2141823125 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -169684316 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2320200241
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2320200241 and -98966682
	Store lower half (18477702) to register lo
	Store upper half (-2028230214) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -2028230214 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 18477702 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2248301372
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 34306
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 23356
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 56638
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 221
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 62
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 227
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 227 to memory location 0x201C + 60
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 64
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	64 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 16
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 16 and -98966682
	Store lower half (-1583466912) to register lo
	Store upper half (15) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 15 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1583466912 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2711500399
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2711500399 and -98966682
	Store lower half (1713708346) to register lo
	Store upper half (-1645946581) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1645946581 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1713708346 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 4223779857
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 4223779857 and -98966682
	Store lower half (-541576762) to register lo
	Store upper half (-168513787) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -168513787 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -541576762 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 709664451
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 709664451 and -98966682
	Store lower half (-1168561486) to register lo
	Store upper half (693312024) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 693312024 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1168561486 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2466918570
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2466918570 and -98966682
	Store lower half (1674584508) to register lo
	Store upper half (-1884892639) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1884892639 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1674584508 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3967218589
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 60534
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 62365
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 8171
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 31
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 235
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 244
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 244 to memory location 0x201C + 64
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 68
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	68 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 17
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 17 and -98966682
	Store lower half (-1682433594) to register lo
	Store upper half (16) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 16 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1682433594 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2612533718
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2612533718 and -98966682
	Store lower half (-869724860) to register lo
	Store upper half (-1742632825) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1742632825 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -869724860 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1409844675
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1409844675 and -98966682
	Store lower half (-2012465998) to register lo
	Store upper half (1377358362) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1377358362 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -2012465998 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3658802856
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3658802856 and -98966682
	Store lower half (54714096) to register lo
	Store upper half (-720472318) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -720472318 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 54714096 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3595348466
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3595348466 and -98966682
	Store lower half (1239370860) to register lo
	Store upper half (-782464562) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -782464562 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1239370860 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2558772642
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 39043
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 50594
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 23841
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 93
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 33
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 124
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 124 to memory location 0x201C + 68
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 72
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	72 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 18
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 18 and -98966682
	Store lower half (-1781400276) to register lo
	Store upper half (17) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 17 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1781400276 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2513567037
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2513567037 and -98966682
	Store lower half (841809230) to register lo
	Store upper half (-1839319068) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1839319068 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 841809230 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2691877546
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2691877546 and -98966682
	Store lower half (-2046067268) to register lo
	Store upper half (-1665117275) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1665117275 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -2046067268 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 449523225
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 449523225 and -98966682
	Store lower half (-1052407562) to register lo
	Store upper half (439165096) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 439165096 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1052407562 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3681069150
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3681069150 and -98966682
	Store lower half (1982623604) to register lo
	Store upper half (-698719095) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -698719095 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1982623604 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2692090877
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 41078
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 3069
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 43915
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 171
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 139
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 32
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 32 to memory location 0x201C + 72
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 76
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	76 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 19
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 19 and -98966682
	Store lower half (-1880366958) to register lo
	Store upper half (18) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 18 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1880366958 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2414600320
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2414600320 and -98966682
	Store lower half (1821176576) to register lo
	Store upper half (-1936005347) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1936005347 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1821176576 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3759543325
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3759543325 and -98966682
	Store lower half (628537998) to register lo
	Store upper half (-622053159) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -622053159 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 628537998 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4288315991
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4288315991 and -98966682
	Store lower half (-1985866838) to register lo
	Store upper half (-105464725) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -105464725 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1985866838 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1880403905
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1880403905 and -98966682
	Store lower half (-1544607258) to register lo
	Store upper half (1837074742) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1837074742 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1544607258 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3465584848
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 52880
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 41168
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 28224
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 110
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 64
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 46
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 46 to memory location 0x201C + 76
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 80
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	80 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 20
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 20 and -98966682
	Store lower half (-1979333640) to register lo
	Store upper half (19) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 19 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1979333640 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2315633643
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2315633643 and -98966682
	Store lower half (-1158123358) to register lo
	Store upper half (-2032691587) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -2032691587 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1158123358 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1009772255
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1009772255 and -98966682
	Store lower half (-963331622) to register lo
	Store upper half (986504601) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 986504601 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -963331622 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4233651267
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4233651267 and -98966682
	Store lower half (615144370) to register lo
	Store upper half (-158869838) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -158869838 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 615144370 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3526200576
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3526200576 and -98966682
	Store lower half (-416469504) to register lo
	Store upper half (-850019114) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -850019114 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -416469504 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 712544982
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 10872
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 37590
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 47278
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 184
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 174
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 22
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 22 to memory location 0x201C + 80
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 84
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	84 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 21
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 21 and -98966682
	Store lower half (-2078300322) to register lo
	Store upper half (20) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 20 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -2078300322 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2216666954
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2216666954 and -98966682
	Store lower half (1345144188) to register lo
	Store upper half (-2129377838) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -2129377838 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1345144188 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3510173870
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3510173870 and -98966682
	Store lower half (-447836332) to register lo
	Store upper half (-865676525) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -865676525 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -447836332 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 690510919
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 690510919 and -98966682
	Store lower half (-1999193782) to register lo
	Store upper half (674599837) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 674599837 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1999193782 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2699242199
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2699242199 and -98966682
	Store lower half (-1367427414) to register lo
	Store upper half (-1657922322) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1657922322 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1367427414 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 860924484
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 13136
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 43588
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 39188
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 153
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 20
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 141
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 141 to memory location 0x201C + 84
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 88
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	88 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 22
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 22 and -98966682
	Store lower half (2117700292) to register lo
	Store upper half (21) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 21 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 2117700292 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2117700305
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2117700305 and -98966682
	Store lower half (-110255546) to register lo
	Store upper half (2068903245) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 2068903245 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -110255546 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2185058059
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2185058059 and -98966682
	Store lower half (-2035126430) to register lo
	Store upper half (2134708910) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 2134708910 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -2035126430 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4186930636
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4186930636 and -98966682
	Store lower half (748946248) to register lo
	Store upper half (-204513910) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -204513910 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 748946248 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3748355778
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3748355778 and -98966682
	Store lower half (-289421492) to register lo
	Store upper half (-632982918) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -632982918 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -289421492 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 888845622
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 13562
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 46390
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 33228
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 129
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 204
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 77
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 77 to memory location 0x201C + 88
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 92
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	92 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 23
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 23 and -98966682
	Store lower half (2018733610) to register lo
	Store upper half (22) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 22 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 2018733610 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2018733628
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2018733628 and -98966682
	Store lower half (1205411816) to register lo
	Store upper half (1972217006) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1972217006 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1205411816 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 844413766
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 844413766 and -98966682
	Store lower half (-710430748) to register lo
	Store upper half (824956381) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 824956381 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -710430748 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3834411577
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3834411577 and -98966682
	Store lower half (971652534) to register lo
	Store upper half (-548910057) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -548910057 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 971652534 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3869405601
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3869405601 and -98966682
	Store lower half (1110706470) to register lo
	Store upper half (-514722382) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -514722382 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1110706470 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2741370004
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 41829
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 64660
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 24561
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 95
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 241
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 174
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 174 to memory location 0x201C + 92
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 96
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	96 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 24
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 24 and -98966682
	Store lower half (1919766928) to register lo
	Store upper half (23) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 23 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1919766928 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1919766919
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1919766919 and -98966682
	Store lower half (1393045706) to register lo
	Store upper half (1875530735) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1875530735 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1393045706 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1019372325
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1019372325 and -98966682
	Store lower half (1677348798) to register lo
	Store upper half (995883462) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 995883462 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1677348798 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1486993016
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1486993016 and -98966682
	Store lower half (-1225581616) to register lo
	Store upper half (1452729014) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1452729014 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1225581616 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3764779366
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3764779366 and -98966682
	Store lower half (-876818268) to register lo
	Store upper half (-616937770) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -616937770 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -876818268 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 277255794
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 4230
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 38514
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 34548
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 134
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 244
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 114
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 114 to memory location 0x201C + 96
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 100
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	100 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 25
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 25 and -98966682
	Store lower half (1820800246) to register lo
	Store upper half (24) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 24 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1820800246 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1820800238
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1820800238 and -98966682
	Store lower half (-1190387500) to register lo
	Store upper half (1778844491) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1778844491 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1190387500 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3540722591
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3540722591 and -98966682
	Store lower half (-1215484326) to register lo
	Store upper half (-835831722) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -835831722 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1215484326 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2040731148
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2040731148 and -98966682
	Store lower half (-223122232) to register lo
	Store upper half (1993707648) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1993707648 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -223122232 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2221341768
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2221341768 and -98966682
	Store lower half (96754864) to register lo
	Store upper half (-2124810743) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -2124810743 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 96754864 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2224925369
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 33949
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 43705
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 11812
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 46
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 36
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 10
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 10 to memory location 0x201C + 100
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 104
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	104 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 26
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 26 and -98966682
	Store lower half (1721833564) to register lo
	Store upper half (25) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 25 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1721833564 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1721833541
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1721833541 and -98966682
	Store lower half (2104613502) to register lo
	Store upper half (1682158232) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1682158232 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 2104613502 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 422734054
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 422734054 and -98966682
	Store lower half (-1752187484) to register lo
	Store upper half (412993214) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 412993214 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1752187484 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2400353050
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2400353050 and -98966682
	Store lower half (-837871012) to register lo
	Store upper half (-1949924325) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1949924325 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -837871012 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1170841159
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1170841159 and -98966682
	Store lower half (1620903242) to register lo
	Store upper half (1143862079) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1143862079 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1620903242 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 615577205
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 9392
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 63093
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 53957
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 210
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 197
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 23
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 23 to memory location 0x201C + 104
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 108
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	108 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 27
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 27 and -98966682
	Store lower half (1622866882) to register lo
	Store upper half (26) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 26 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1622866882 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1622866904
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1622866904 and -98966682
	Store lower half (-538386416) to register lo
	Store upper half (1585472031) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1585472031 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -538386416 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2171109903
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2171109903 and -98966682
	Store lower half (-1804722438) to register lo
	Store upper half (2121082154) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 2121082154 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1804722438 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3926080464
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3926080464 and -98966682
	Store lower half (312689888) to register lo
	Store upper half (-459353448) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -459353448 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 312689888 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 4131231352
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 4131231352 and -98966682
	Store lower half (-1699849264) to register lo
	Store upper half (-258929745) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -258929745 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1699849264 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1782534271
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 27199
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 20607
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 14912
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 58
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 64
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 122
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 122 to memory location 0x201C + 108
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 112
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	112 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 28
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 28 and -98966682
	Store lower half (1523900200) to register lo
	Store upper half (27) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 27 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1523900200 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1523900211
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1523900211 and -98966682
	Store lower half (-1934219438) to register lo
	Store upper half (1488785776) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1488785776 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1934219438 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3557504546
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3557504546 and -98966682
	Store lower half (-355879028) to register lo
	Store upper half (-819436465) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -819436465 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -355879028 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 635556803
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 635556803 and -98966682
	Store lower half (1925925042) to register lo
	Store upper half (620912000) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 620912000 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1925925042 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1472795954
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1472795954 and -98966682
	Store lower half (768329708) to register lo
	Store upper half (1438859088) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1438859088 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 768329708 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2013853884
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 30728
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 63676
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 32948
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 128
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 180
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 52
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 52 to memory location 0x201C + 112
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 116
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	116 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 29
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 29 and -98966682
	Store lower half (1424933518) to register lo
	Store upper half (28) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 28 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1424933518 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1424933522
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1424933522 and -98966682
	Store lower half (569048108) to register lo
	Store upper half (1392099525) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1392099525 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 569048108 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1930640617
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1930640617 and -98966682
	Store lower half (1701699542) to register lo
	Store upper half (1886153876) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1886153876 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1701699542 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 352432962
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 352432962 and -98966682
	Store lower half (-703401396) to register lo
	Store upper half (344312033) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 344312033 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -703401396 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3264690861
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3264690861 and -98966682
	Store lower half (1311623150) to register lo
	Store upper half (-1105502997) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1105502997 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1311623150 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4030110469
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 61494
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 39685
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 27443
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 107
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 51
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 88
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 88 to memory location 0x201C + 116
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 120
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	120 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 30
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 30 and -98966682
	Store lower half (1325966836) to register lo
	Store upper half (29) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 29 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1325966836 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1325966825
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1325966825 and -98966682
	Store lower half (-430918186) to register lo
	Store upper half (1295413265) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1295413265 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -430918186 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2875639239
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2875639239 and -98966682
	Store lower half (314655306) to register lo
	Store upper half (-1485589906) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1485589906 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 314655306 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3048402980
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3048402980 and -98966682
	Store lower half (-1413506472) to register lo
	Store upper half (-1316807070) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1316807070 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1413506472 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 440173626
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 440173626 and -98966682
	Store lower half (-1425662692) to register lo
	Store upper half (430030935) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 430030935 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1425662692 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2997345611
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 45735
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 56651
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 28652
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 111
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 236
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 131
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 131 to memory location 0x201C + 120
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 124
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	124 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 31
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 31 and -98966682
	Store lower half (1227000154) to register lo
	Store upper half (30) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 30 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1227000154 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1227000132
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1227000132 and -98966682
	Store lower half (-1826751208) to register lo
	Store upper half (1198727010) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1198727010 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1826751208 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3564036730
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3564036730 and -98966682
	Store lower half (954886812) to register lo
	Store upper half (-813054798) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -813054798 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 954886812 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4150505006
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4150505006 and -98966682
	Store lower half (-475516844) to register lo
	Store upper half (-240100204) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -240100204 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -475516844 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 303590592
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 303590592 and -98966682
	Store lower half (-51800960) to register lo
	Store upper half (296595112) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 296595112 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -51800960 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3980671528
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 60740
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 14888
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 55148
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 215
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 108
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 187
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 187 to memory location 0x201C + 124
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 128
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	128 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 32
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 32 and -98966682
	Store lower half (1128033472) to register lo
	Store upper half (31) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 31 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1128033472 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1128033503
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1128033503 and -98966682
	Store lower half (-966517286) to register lo
	Store upper half (1102040817) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1102040817 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -966517286 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2278282027
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2278282027 and -98966682
	Store lower half (1957184546) to register lo
	Store upper half (-2069182529) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -2069182529 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1957184546 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4026696605
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4026696605 and -98966682
	Store lower half (134850446) to register lo
	Store upper half (-361055752) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -361055752 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 134850446 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3799195254
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3799195254 and -98966682
	Store lower half (-2090416892) to register lo
	Store upper half (-583314909) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -583314909 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -2090416892 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1583191847
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 24157
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 38695
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 51578
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 201
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 122
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 179
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 179 to memory location 0x201C + 128
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 132
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	132 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 33
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 33 and -98966682
	Store lower half (1029066790) to register lo
	Store upper half (32) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 32 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1029066790 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1029066758
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1029066758 and -98966682
	Store lower half (-1511050140) to register lo
	Store upper half (1005354511) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1005354511 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1511050140 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2651015787
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2651015787 and -98966682
	Store lower half (-1564506206) to register lo
	Store upper half (-1705037478) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1705037478 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1564506206 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 954251000
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 954251000 and -98966682
	Store lower half (-100741424) to register lo
	Store upper half (932262693) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 932262693 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -100741424 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3463446005
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3463446005 and -98966682
	Store lower half (-1648595298) to register lo
	Store upper half (-911327664) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -911327664 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1648595298 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1410486478
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 21522
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 20686
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 1244
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 4
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 220
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 216
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 216 to memory location 0x201C + 132
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 136
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	136 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 34
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 34 and -98966682
	Store lower half (930100108) to register lo
	Store upper half (33) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 33 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 930100108 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 930100141
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 930100141 and -98966682
	Store lower half (-1838416402) to register lo
	Store upper half (908668330) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 908668330 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1838416402 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2755842116
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2755842116 and -98966682
	Store lower half (1877952280) to register lo
	Store upper half (-1602626607) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1602626607 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1877952280 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3482754249
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3482754249 and -98966682
	Store lower half (-592858346) to register lo
	Store upper half (-892464330) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -892464330 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -592858346 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 375889952
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 375889952 and -98966682
	Store lower half (-1285149504) to register lo
	Store upper half (367228516) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 367228516 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1285149504 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2793757348
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 42629
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 23204
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 64545
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 252
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 33
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 221
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 221 to memory location 0x201C + 136
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 140
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	140 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 35
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 35 and -98966682
	Store lower half (831133426) to register lo
	Store upper half (34) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 34 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 831133426 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 831133392
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 831133392 and -98966682
	Store lower half (-1987082528) to register lo
	Store upper half (811982020) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 811982020 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1987082528 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3119143460
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3119143460 and -98966682
	Store lower half (-690891176) to register lo
	Store upper half (-1247696626) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1247696626 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -690891176 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1668317014
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1668317014 and -98966682
	Store lower half (-886964668) to register lo
	Store upper half (1629874858) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1629874858 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -886964668 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2852394222
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2852394222 and -98966682
	Store lower half (-747806508) to register lo
	Store upper half (-1508299301) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1508299301 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -747806508 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1970556175
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 30068
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 19727
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 14459
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 56
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 123
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 67
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 67 to memory location 0x201C + 140
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 144
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	144 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 36
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 36 and -98966682
	Store lower half (732166744) to register lo
	Store upper half (35) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 35 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 732166744 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 732166779
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 732166779 and -98966682
	Store lower half (1584651778) to register lo
	Store upper half (715295843) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 715295843 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1584651778 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1959875169
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1959875169 and -98966682
	Store lower half (-320088666) to register lo
	Store upper half (1914714791) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1914714791 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -320088666 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2664165121
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2664165121 and -98966682
	Store lower half (1799888230) to register lo
	Store upper half (-1692191137) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1692191137 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1799888230 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 4033555257
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 4033555257 and -98966682
	Store lower half (-1265122378) to register lo
	Store upper half (-354355141) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -354355141 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1265122378 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1584872333
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 24183
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 15245
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 26106
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 101
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 250
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 159
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 159 to memory location 0x201C + 144
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 148
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	148 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 37
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 37 and -98966682
	Store lower half (633200062) to register lo
	Store upper half (36) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 36 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 633200062 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 633200026
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 633200026 and -98966682
	Store lower half (1831852380) to register lo
	Store upper half (618609529) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 618609529 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1831852380 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1240523301
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1240523301 and -98966682
	Store lower half (1176365502) to register lo
	Store upper half (1211938572) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1211938572 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1176365502 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 237067954
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 237067954 and -98966682
	Store lower half (1269141740) to register lo
	Store upper half (231605321) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 231605321 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1269141740 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1181455525
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1181455525 and -98966682
	Store lower half (432572606) to register lo
	Store upper half (1154231864) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1154231864 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 432572606 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1560585862
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 23812
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 42630
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 64386
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 251
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 130
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 121
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 121 to memory location 0x201C + 148
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 152
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	152 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 38
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 38 and -98966682
	Store lower half (534233380) to register lo
	Store upper half (37) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 37 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 534233380 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 534233345
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 534233345 and -98966682
	Store lower half (-751580826) to register lo
	Store upper half (521923285) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 521923285 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -751580826 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3425182643
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3425182643 and -98966682
	Store lower half (975237714) to register lo
	Store upper half (-948709343) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -948709343 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 975237714 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4250086003
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4250086003 and -98966682
	Store lower half (553771730) to register lo
	Store upper half (-142813799) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -142813799 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 553771730 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3598530379
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3598530379 and -98966682
	Store lower half (574523618) to register lo
	Store upper half (-779355968) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -779355968 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 574523618 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4088754210
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 62389
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 28706
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 33687
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 131
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 151
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 20
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 20 to memory location 0x201C + 152
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 156
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	156 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 39
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 39 and -98966682
	Store lower half (435266698) to register lo
	Store upper half (38) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 38 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 435266698 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 435266732
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 435266732 and -98966682
	Store lower half (-1474813816) to register lo
	Store upper half (425237108) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 425237108 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1474813816 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2973809404
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2973809404 and -98966682
	Store lower half (1614017640) to register lo
	Store upper half (-1389681825) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1389681825 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1614017640 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3440957239
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3440957239 and -98966682
	Store lower half (2031781098) to register lo
	Store upper half (-933298233) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -933298233 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 2031781098 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2974055213
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2974055213 and -98966682
	Store lower half (1407646446) to register lo
	Store upper half (-1389441680) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1389441680 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1407646446 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4274534302
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 65224
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 14238
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 51542
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 201
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 86
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 159
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 159 to memory location 0x201C + 156
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 160
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	160 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 40
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 40 and -98966682
	Store lower half (336300016) to register lo
	Store upper half (39) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 39 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 336300016 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 336299991
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 336299991 and -98966682
	Store lower half (1879753898) to register lo
	Store upper half (328550806) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 328550806 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1879753898 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1671400764
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1671400764 and -98966682
	Store lower half (-1901430296) to register lo
	Store upper half (1632887551) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1632887551 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1901430296 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4026112791
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4026112791 and -98966682
	Store lower half (-1925697494) to register lo
	Store upper half (-361626114) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -361626114 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1925697494 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1732916692
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1732916692 and -98966682
	Store lower half (1056992888) to register lo
	Store upper half (1692986000) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1692986000 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1056992888 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1541965032
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 23528
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 34024
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 57088
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 223
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 0
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 223
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 223 to memory location 0x201C + 160
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 164
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	164 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 41
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 41 and -98966682
	Store lower half (237333334) to register lo
	Store upper half (40) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 40 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 237333334 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 237333374
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 237333374 and -98966682
	Store lower half (1552387636) to register lo
	Store upper half (231864625) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 231864625 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1552387636 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1364621061
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1364621061 and -98966682
	Store lower half (-1787176194) to register lo
	Store upper half (1333176812) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1333176812 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1787176194 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3658445586
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3658445586 and -98966682
	Store lower half (1710411564) to register lo
	Store upper half (-720821356) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -720821356 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1710411564 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2969300152
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2969300152 and -98966682
	Store lower half (-1254131376) to register lo
	Store upper half (-1394087173) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1394087173 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1254131376 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 433623979
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 6616
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 37803
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 35443
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 138
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 115
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 249
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 249 to memory location 0x201C + 164
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 168
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	168 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 42
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 42 and -98966682
	Store lower half (138366652) to register lo
	Store upper half (41) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 41 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 138366652 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 138366613
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 138366613 and -98966682
	Store lower half (-1703645602) to register lo
	Store upper half (135178303) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 135178303 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1703645602 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2457519713
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2457519713 and -98966682
	Store lower half (1414270374) to register lo
	Store upper half (-1894074923) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1894074923 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1414270374 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3679893619
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3679893619 and -98966682
	Store lower half (-1688832302) to register lo
	Store upper half (-699867539) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -699867539 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1688832302 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1293854911
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1293854911 and -98966682
	Store lower half (-360736486) to register lo
	Store upper half (1264041289) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1264041289 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -360736486 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2703762515
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 41256
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 9299
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 34171
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 133
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 123
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 254
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 254 to memory location 0x201C + 168
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 172
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	172 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 43
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 43 and -98966682
	Store lower half (39399970) to register lo
	Store upper half (42) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 42 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 39399970 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 39399944
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 39399944 and -98966682
	Store lower half (-1179711696) to register lo
	Store upper half (38492071) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 38492071 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1179711696 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3152302231
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3152302231 and -98966682
	Store lower half (-1523777238) to register lo
	Store upper half (-1215301915) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1215301915 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1523777238 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 312670159
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 312670159 and -98966682
	Store lower half (1206012282) to register lo
	Store upper half (305465464) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 305465464 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1206012282 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1440170242
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1440170242 and -98966682
	Store lower half (1603972300) to register lo
	Store upper half (1406985153) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1406985153 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1603972300 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 205934349
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 3142
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 20237
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 17227
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 67
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 75
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 8
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 8 to memory location 0x201C + 172
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 176
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	176 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 44
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 44 and -98966682
	Store lower half (-59566712) to register lo
	Store upper half (42) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 42 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -59566712 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4235400610
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4235400610 and -98966682
	Store lower half (-220511092) to register lo
	Store upper half (-157160805) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -157160805 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -220511092 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 75148823
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 75148823 and -98966682
	Store lower half (125747754) to register lo
	Store upper half (73417208) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 73417208 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 125747754 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 52331474
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 52331474 and -98966682
	Store lower half (1083030444) to register lo
	Store upper half (51125627) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 51125627 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1083030444 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1132570327
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1132570327 and -98966682
	Store lower half (496508586) to register lo
	Store upper half (1106473102) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1106473102 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 496508586 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1550544420
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 23659
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 28196
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 12879
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 50
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 79
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 125
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 125 to memory location 0x201C + 176
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 180
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	180 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 45
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 45 and -98966682
	Store lower half (-158533394) to register lo
	Store upper half (43) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 43 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -158533394 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4136433861
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4136433861 and -98966682
	Store lower half (-369177218) to register lo
	Store upper half (-253847115) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -253847115 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -369177218 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 421549259
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 421549259 and -98966682
	Store lower half (870631906) to register lo
	Store upper half (411835720) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 411835720 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 870631906 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 728290474
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 728290474 and -98966682
	Store lower half (150043068) to register lo
	Store upper half (711508858) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 711508858 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 150043068 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 580500166
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 580500166 and -98966682
	Store lower half (-1288438556) to register lo
	Store upper half (567124004) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 567124004 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1288438556 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2466143424
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 37630
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 23744
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 52798
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 206
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 62
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 240
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 240 to memory location 0x201C + 180
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 184
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	184 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 46
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 46 and -98966682
	Store lower half (-257500076) to register lo
	Store upper half (44) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 44 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -257500076 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4037467256
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4037467256 and -98966682
	Store lower half (-1884143664) to register lo
	Store upper half (-350533284) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -350533284 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1884143664 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1688827532
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1688827532 and -98966682
	Store lower half (-1420861496) to register lo
	Store upper half (1649912763) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1649912763 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1420861496 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3373855859
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3373855859 and -98966682
	Store lower half (1844338386) to register lo
	Store upper half (-998853431) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -998853431 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1844338386 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2845370907
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2845370907 and -98966682
	Store lower half (1697003458) to register lo
	Store upper half (-1515160781) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1515160781 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1697003458 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3231075569
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 49302
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 19697
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 35943
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 140
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 103
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 235
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 235 to memory location 0x201C + 184
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 188
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	188 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 47
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 47 and -98966682
	Store lower half (-356466758) to register lo
	Store upper half (45) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 45 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -356466758 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3938500503
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3938500503 and -98966682
	Store lower half (-1636943062) to register lo
	Store upper half (-447219598) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -447219598 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1636943062 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2067383128
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2067383128 and -98966682
	Store lower half (1423105296) to register lo
	Store upper half (2019745501) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 2019745501 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1423105296 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 749732813
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 749732813 and -98966682
	Store lower half (1921338030) to register lo
	Store upper half (732457112) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 732457112 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1921338030 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1496130102
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1496130102 and -98966682
	Store lower half (-1600683132) to register lo
	Store upper half (1461655559) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1461655559 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1600683132 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4152925059
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 63368
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 39811
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 27659
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 108
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 11
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 103
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 103 to memory location 0x201C + 188
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 192
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	192 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 48
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 48 and -98966682
	Store lower half (-455433440) to register lo
	Store upper half (46) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 46 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -455433440 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3839533838
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3839533838 and -98966682
	Store lower half (-1508875884) to register lo
	Store upper half (-543905826) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -543905826 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1508875884 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2038744650
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2038744650 and -98966682
	Store lower half (-940269700) to register lo
	Store upper half (1991766924) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1991766924 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -940269700 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2973986032
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2973986032 and -98966682
	Store lower half (1843804064) to register lo
	Store upper half (-1389509267) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1389509267 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1843804064 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3234591437
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3234591437 and -98966682
	Store lower half (-1852603218) to register lo
	Store upper half (-1134908856) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1134908856 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1852603218 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 768159462
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 11721
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 12006
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 815
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 3
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 47
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 44
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 44 to memory location 0x201C + 192
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 196
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	196 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 49
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 49 and -98966682
	Store lower half (-554400122) to register lo
	Store upper half (47) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 47 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -554400122 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3740567209
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3740567209 and -98966682
	Store lower half (-648641962) to register lo
	Store upper half (-640592019) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -640592019 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -648641962 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 8901947
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 8901947 and -98966682
	Store lower half (418727554) to register lo
	Store upper half (8696824) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 8696824 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 418727554 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 410121594
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 410121594 and -98966682
	Store lower half (-419627876) to register lo
	Store upper half (400671376) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 400671376 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -419627876 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 4045225484
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 4045225484 and -98966682
	Store lower half (-958964536) to register lo
	Store upper half (-342953825) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -342953825 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -958964536 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 760851543
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 11609
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 44119
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 33038
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 129
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 14
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 143
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 143 to memory location 0x201C + 196
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 200
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	200 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 50
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 50 and -98966682
	Store lower half (-653366804) to register lo
	Store upper half (48) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 48 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -653366804 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3641600476
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3641600476 and -98966682
	Store lower half (1914192296) to register lo
	Store upper half (-737278313) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -737278313 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1914192296 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2786477887
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2786477887 and -98966682
	Store lower half (1765031962) to register lo
	Store upper half (-1572696760) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1572696760 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1765031962 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3413560658
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3413560658 and -98966682
	Store lower half (-1972927316) to register lo
	Store upper half (-960063529) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -960063529 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1972927316 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1285624699
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1285624699 and -98966682
	Store lower half (1635177474) to register lo
	Store upper half (1256000722) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1256000722 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1635177474 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 732682448
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 11179
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 55504
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 62331
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 243
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 123
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 136
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 136 to memory location 0x201C + 200
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 204
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	204 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 51
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 51 and -98966682
	Store lower half (-752333486) to register lo
	Store upper half (49) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 49 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -752333486 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3542633827
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3542633827 and -98966682
	Store lower half (458792562) to register lo
	Store upper half (-833964525) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -833964525 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 458792562 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3574736993
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3574736993 and -98966682
	Store lower half (-1434248794) to register lo
	Store upper half (-802601096) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -802601096 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1434248794 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2057985758
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2057985758 and -98966682
	Store lower half (28223092) to register lo
	Store upper half (2010564670) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 2010564670 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 28223092 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1987604042
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1987604042 and -98966682
	Store lower half (117542780) to register lo
	Store upper half (1941804723) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1941804723 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 117542780 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1958484431
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 29884
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 6607
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 28019
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 109
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 115
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 30
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 30 to memory location 0x201C + 204
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 208
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	208 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 52
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 52 and -98966682
	Store lower half (-851300168) to register lo
	Store upper half (50) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 50 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -851300168 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3443667082
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3443667082 and -98966682
	Store lower half (-85740292) to register lo
	Store upper half (-930650832) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -930650832 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -85740292 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 845468108
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 845468108 and -98966682
	Store lower half (790592328) to register lo
	Store upper half (825986429) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 825986429 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 790592328 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 505738805
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 505738805 and -98966682
	Store lower half (-1774708706) to register lo
	Store upper half (494085330) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 494085330 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1774708706 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2336963788
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2336963788 and -98966682
	Store lower half (1590631752) to register lo
	Store upper half (-2011852941) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -2011852941 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1590631752 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3604648507
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 55002
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 37435
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 17633
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 68
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 225
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 165
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 165 to memory location 0x201C + 208
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 212
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	212 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 53
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 53 and -98966682
	Store lower half (-950266850) to register lo
	Store upper half (51) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 51 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -950266850 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3344700461
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3344700461 and -98966682
	Store lower half (-17239826) to register lo
	Store upper half (-1027337017) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1027337017 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -17239826 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1010623529
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1010623529 and -98966682
	Store lower half (1351893846) to register lo
	Store upper half (987336260) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 987336260 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1351893846 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1783483666
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1783483666 and -98966682
	Store lower half (-224875732) to register lo
	Store upper half (1742387785) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1742387785 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -224875732 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2504135013
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2504135013 and -98966682
	Store lower half (1654422846) to register lo
	Store upper half (-1848533755) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1848533755 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1654422846 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4081967163
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 62285
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 57403
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 4982
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 19
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 118
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 101
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 101 to memory location 0x201C + 212
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 216
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	216 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 54
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 54 and -98966682
	Store lower half (-1049233532) to register lo
	Store upper half (52) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 52 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1049233532 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3245733808
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3245733808 and -98966682
	Store lower half (-1076772832) to register lo
	Store upper half (-1124023233) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1124023233 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1076772832 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 47252511
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 47252511 and -98966682
	Store lower half (586555738) to register lo
	Store upper half (46163696) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 46163696 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 586555738 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 540428202
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 540428202 and -98966682
	Store lower half (-87667780) to register lo
	Store upper half (527975397) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 527975397 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -87667780 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3854436441
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3854436441 and -98966682
	Store lower half (-976273802) to register lo
	Store upper half (-529346616) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -529346616 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -976273802 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 633205182
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 9661
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 61886
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 54275
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 212
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 3
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 215
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 215 to memory location 0x201C + 216
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 220
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	220 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 55
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 55 and -98966682
	Store lower half (-1148200214) to register lo
	Store upper half (53) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 53 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1148200214 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3146767071
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3146767071 and -98966682
	Store lower half (1881928154) to register lo
	Store upper half (-1220709531) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1220709531 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1881928154 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3340141247
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3340141247 and -98966682
	Store lower half (-1819380454) to register lo
	Store upper half (-1031791175) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1031791175 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1819380454 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1359898787
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1359898787 and -98966682
	Store lower half (2020686322) to register lo
	Store upper half (1328563351) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1328563351 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 2020686322 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 927038821
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 927038821 and -98966682
	Store lower half (-148536002) to register lo
	Store upper half (905677550) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 905677550 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -148536002 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3269332944
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 49886
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 4048
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 52494
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 205
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 14
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 195
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 195 to memory location 0x201C + 220
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 224
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	224 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 56
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 56 and -98966682
	Store lower half (-1247166896) to register lo
	Store upper half (54) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 54 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1247166896 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3047800422
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3047800422 and -98966682
	Store lower half (426528420) to register lo
	Store upper half (-1317395743) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1317395743 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 426528420 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2820041797
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2820041797 and -98966682
	Store lower half (-810724738) to register lo
	Store upper half (-1539906246) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1539906246 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -810724738 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1805367108
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1805367108 and -98966682
	Store lower half (1093685528) to register lo
	Store upper half (1763766979) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1763766979 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1093685528 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 672179163
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 672179163 and -98966682
	Store lower half (-1773176254) to register lo
	Store upper half (656690490) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 656690490 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1773176254 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2976593784
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 45419
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 14200
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 34323
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 134
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 19
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 149
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 149 to memory location 0x201C + 224
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 228
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	228 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 57
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 57 and -98966682
	Store lower half (-1346133578) to register lo
	Store upper half (55) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 55 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1346133578 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2948833665
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2948833665 and -98966682
	Store lower half (1069595750) to register lo
	Store upper half (-1414082061) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1414082061 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1069595750 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2490789269
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2490789269 and -98966682
	Store lower half (1609025630) to register lo
	Store upper half (-1861571980) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1861571980 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1609025630 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3471663658
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3471663658 and -98966682
	Store lower half (-1967498564) to register lo
	Store upper half (-903299366) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -903299366 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1967498564 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1083368550
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1083368550 and -98966682
	Store lower half (-452758876) to register lo
	Store upper half (1058405055) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1058405055 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -452758876 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3658909723
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 55830
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 34843
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 21005
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 82
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 13
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 95
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 95 to memory location 0x201C + 228
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 232
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	232 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 58
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 58 and -98966682
	Store lower half (-1445100260) to register lo
	Store upper half (56) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 56 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1445100260 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2849867044
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2849867044 and -98966682
	Store lower half (1138096216) to register lo
	Store upper half (-1510768246) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1510768246 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1138096216 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3861281234
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3861281234 and -98966682
	Store lower half (-891568212) to register lo
	Store upper half (-522659544) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -522659544 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -891568212 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 704865924
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 704865924 and -98966682
	Store lower half (-1406802792) to register lo
	Store upper half (688624067) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 688624067 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1406802792 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2234414427
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2234414427 and -98966682
	Store lower half (-1770687678) to register lo
	Store upper half (-2112039311) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -2112039311 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1770687678 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 342467891
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 5225
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 42291
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 45402
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 177
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 90
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 235
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 235 to memory location 0x201C + 232
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 236
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	236 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 59
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 59 and -98966682
	Store lower half (-1544066942) to register lo
	Store upper half (57) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 57 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1544066942 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2750900411
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2750900411 and -98966682
	Store lower half (-1900770430) to register lo
	Store upper half (-1607454443) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1607454443 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1900770430 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 780450455
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 780450455 and -98966682
	Store lower half (-384484054) to register lo
	Store upper half (762466943) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 762466943 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -384484054 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3295113045
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3295113045 and -98966682
	Store lower half (-633619746) to register lo
	Store upper half (-1075781816) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1075781816 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -633619746 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1708877206
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1708877206 and -98966682
	Store lower half (-2010874940) to register lo
	Store upper half (1669500443) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1669500443 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -2010874940 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3953587679
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 60326
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 62943
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 7801
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 30
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 121
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 103
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 103 to memory location 0x201C + 236
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 240
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	240 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 60
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 60 and -98966682
	Store lower half (-1643033624) to register lo
	Store upper half (58) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 58 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1643033624 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2651933650
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2651933650 and -98966682
	Store lower half (-861836372) to register lo
	Store upper half (-1704140765) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1704140765 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -861836372 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1456311183
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1456311183 and -98966682
	Store lower half (530343930) to register lo
	Store upper half (1422754167) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1422754167 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 530343930 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1263658637
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1263658637 and -98966682
	Store lower half (-673848530) to register lo
	Store upper half (1234540812) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1234540812 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -673848530 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2655025698
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2655025698 and -98966682
	Store lower half (1531891596) to register lo
	Store upper half (-1701119965) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1701119965 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1531891596 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3251910575
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 49620
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 14255
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 63099
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 246
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 123
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 141
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 141 to memory location 0x201C + 240
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 244
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	244 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 61
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 61 and -98966682
	Store lower half (-1742000306) to register lo
	Store upper half (59) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 59 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1742000306 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2552967029
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2552967029 and -98966682
	Store lower half (-793335906) to register lo
	Store upper half (-1800826950) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1800826950 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -793335906 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1142892580
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1142892580 and -98966682
	Store lower half (-662312360) to register lo
	Store upper half (1116557504) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1116557504 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -662312360 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2584263320
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2584263320 and -98966682
	Store lower half (-976805744) to register lo
	Store upper half (-1770251803) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1770251803 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -976805744 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1404778869
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1404778869 and -98966682
	Store lower half (1056482206) to register lo
	Store upper half (1372409285) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1372409285 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1056482206 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1865805403
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 28469
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 61019
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 33134
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 129
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 110
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 239
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 239 to memory location 0x201C + 244
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 248
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	248 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 62
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 62 and -98966682
	Store lower half (-1840966988) to register lo
	Store upper half (60) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 60 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1840966988 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2454000264
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2454000264 and -98966682
	Store lower half (641464880) to register lo
	Store upper half (-1897513275) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1897513275 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 641464880 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2833106165
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2833106165 and -98966682
	Store lower half (1810806942) to register lo
	Store upper half (-1527142913) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1527142913 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1810806942 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3474398561
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3474398561 and -98966682
	Store lower half (-1698973786) to register lo
	Store upper half (-900627482) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -900627482 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1698973786 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1357526080
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1357526080 and -98966682
	Store lower half (-2082107008) to register lo
	Store upper half (1326245317) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1326245317 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -2082107008 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3437851717
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 52457
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 29765
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 47276
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 184
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 172
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 20
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 20 to memory location 0x201C + 248
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 252
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	252 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 63
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 63 and -98966682
	Store lower half (-1939933670) to register lo
	Store upper half (61) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 61 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1939933670 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2355033639
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2355033639 and -98966682
	Store lower half (1105832074) to register lo
	Store upper half (-1994199464) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1994199464 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1105832074 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3368765138
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3368765138 and -98966682
	Store lower half (1061973420) to register lo
	Store upper half (-1003826849) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1003826849 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1061973420 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4217814259
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4217814259 and -98966682
	Store lower half (104186322) to register lo
	Store upper half (-174341922) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -174341922 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 104186322 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 4088267020
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 4088267020 and -98966682
	Store lower half (879627976) to register lo
	Store upper half (-300904072) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -300904072 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 879627976 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3665731504
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 55934
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 40880
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 17870
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 69
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 206
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 139
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 139 to memory location 0x201C + 252
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 256
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	256 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 64
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 64 and -98966682
	Store lower half (-2038900352) to register lo
	Store upper half (62) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 62 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -2038900352 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2256067006
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2256067006 and -98966682
	Store lower half (-1933034572) to register lo
	Store upper half (-2090885661) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -2090885661 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1933034572 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 261596759
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 261596759 and -98966682
	Store lower half (-479564886) to register lo
	Store upper half (255568921) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 255568921 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -479564886 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3964782515
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3964782515 and -98966682
	Store lower half (-81507758) to register lo
	Store upper half (-421543189) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -421543189 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -81507758 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 503023801
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 503023801 and -98966682
	Store lower half (8750262) to register lo
	Store upper half (491432887) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 491432887 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 8750262 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 500117249
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 7631
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 12033
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 13006
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 50
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 206
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 252
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 252 to memory location 0x201C + 256
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 260
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	260 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 65
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 65 and -98966682
	Store lower half (-2137867034) to register lo
	Store upper half (63) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 63 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -2137867034 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2157100249
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2157100249 and -98966682
	Store lower half (-1289967242) to register lo
	Store upper half (2107395317) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 2107395317 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1289967242 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3464553859
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3464553859 and -98966682
	Store lower half (-357983438) to register lo
	Store upper half (-910245338) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -910245338 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -357983438 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 588732692
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 588732692 and -98966682
	Store lower half (-365020680) to register lo
	Store upper half (575166832) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 575166832 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -365020680 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3363201160
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3363201160 and -98966682
	Store lower half (336268848) to register lo
	Store upper half (-1009262619) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1009262619 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 336268848 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3621573077
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 55260
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 53717
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 1545
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 6
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 9
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 15
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 15 to memory location 0x201C + 260
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 264
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	264 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 66
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 66 and -98966682
	Store lower half (2058133580) to register lo
	Store upper half (64) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 64 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 2058133580 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2058133516
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2058133516 and -98966682
	Store lower half (1272867016) to register lo
	Store upper half (2010709023) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 2010709023 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1272867016 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1007064279
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1007064279 and -98966682
	Store lower half (1066988202) to register lo
	Store upper half (983859024) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 983859024 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1066988202 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 87854586
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 87854586 and -98966682
	Store lower half (-915456100) to register lo
	Store upper half (85830198) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 85830198 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -915456100 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3430061482
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3430061482 and -98966682
	Store lower half (-1309188164) to register lo
	Store upper half (-943942925) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -943942925 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1309188164 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1984679247
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 30283
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 52559
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 47876
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 187
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 4
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 191
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 191 to memory location 0x201C + 264
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 268
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	268 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 67
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 67 and -98966682
	Store lower half (1959166898) to register lo
	Store upper half (65) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 65 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1959166898 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1959166963
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1959166963 and -98966682
	Store lower half (-1093399598) to register lo
	Store upper half (1914022904) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1914022904 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1093399598 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3435241514
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3435241514 and -98966682
	Store lower half (-297464132) to register lo
	Store upper half (-938882254) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -938882254 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -297464132 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 642565518
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 642565518 and -98966682
	Store lower half (1285660820) to register lo
	Store upper half (627759217) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 627759217 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1285660820 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1774942437
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1774942437 and -98966682
	Store lower half (60963390) to register lo
	Store upper half (1734043368) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1734043368 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 60963390 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1694063830
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 25849
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 23766
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 14383
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 56
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 47
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 23
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 23 to memory location 0x201C + 268
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 272
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	272 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 68
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 68 and -98966682
	Store lower half (1860200216) to register lo
	Store upper half (66) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 66 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1860200216 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1860200282
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1860200282 and -98966682
	Store lower half (618134492) to register lo
	Store upper half (1817336661) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1817336661 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 618134492 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1216716937
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1216716937 and -98966682
	Store lower half (-638029418) to register lo
	Store upper half (1188680765) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1188680765 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -638029418 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2669782443
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2669782443 and -98966682
	Store lower half (1761714978) to register lo
	Store upper half (-1686703252) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1686703252 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1761714978 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 4067905614
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 4067905614 and -98966682
	Store lower half (1801267476) to register lo
	Store upper half (-320796301) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -320796301 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1801267476 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2277253223
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 34748
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 8295
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 42971
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 167
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 219
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 124
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 124 to memory location 0x201C + 272
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 276
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	276 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 69
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 69 and -98966682
	Store lower half (1761233534) to register lo
	Store upper half (67) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 67 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1761233534 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1761233469
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1761233469 and -98966682
	Store lower half (-1786598578) to register lo
	Store upper half (1720650288) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1720650288 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1786598578 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 4077756798
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 4077756798 and -98966682
	Store lower half (-1091628492) to register lo
	Store upper half (-311172113) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -311172113 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1091628492 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1402794459
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1402794459 and -98966682
	Store lower half (-144667070) to register lo
	Store upper half (1370470600) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1370470600 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -144667070 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2798597770
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2798597770 and -98966682
	Store lower half (1264982268) to register lo
	Store upper half (-1560856149) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1560856149 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1264982268 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3918602583
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 59793
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 8535
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 51398
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 200
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 198
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 14
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 14 to memory location 0x201C + 276
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 280
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	280 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 70
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 70 and -98966682
	Store lower half (1662266852) to register lo
	Store upper half (68) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 68 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1662266852 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1662266784
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1662266784 and -98966682
	Store lower half (320802240) to register lo
	Store upper half (1623964041) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1623964041 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 320802240 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1943319625
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1943319625 and -98966682
	Store lower half (-1480749034) to register lo
	Store upper half (1898540728) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1898540728 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1480749034 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3600088750
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3600088750 and -98966682
	Store lower half (1747960660) to register lo
	Store upper half (-777833506) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -777833506 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1747960660 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3113021578
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3113021578 and -98966682
	Store lower half (686568700) to register lo
	Store upper half (-1253677444) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1253677444 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 686568700 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2645185152
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 40362
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 21120
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 53034
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 207
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 42
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 229
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 229 to memory location 0x201C + 280
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 284
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	284 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 71
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 71 and -98966682
	Store lower half (1563300170) to register lo
	Store upper half (69) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 69 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1563300170 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1563300111
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1563300111 and -98966682
	Store lower half (1240602874) to register lo
	Store upper half (1527277805) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1527277805 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1240602874 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 318402583
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 318402583 and -98966682
	Store lower half (158076458) to register lo
	Store upper half (311065799) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 311065799 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 158076458 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 468087533
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 468087533 and -98966682
	Store lower half (551481710) to register lo
	Store upper half (457301637) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 457301637 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 551481710 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1000288235
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1000288235 and -98966682
	Store lower half (350058658) to register lo
	Store upper half (977239117) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 977239117 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 350058658 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 786564335
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 12002
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 1263
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 10765
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 42
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 13
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 39
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 39 to memory location 0x201C + 284
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 288
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	288 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 72
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 72 and -98966682
	Store lower half (1464333488) to register lo
	Store upper half (70) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 70 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1464333488 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1464333558
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1464333558 and -98966682
	Store lower half (-1125663740) to register lo
	Store upper half (1430591686) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1430591686 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1125663740 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3919750338
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3919750338 and -98966682
	Store lower half (-640177332) to register lo
	Store upper half (-465537713) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -465537713 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -640177332 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1033362947
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1033362947 and -98966682
	Store lower half (-794157518) to register lo
	Store upper half (1009551705) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1009551705 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -794157518 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3968243563
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3968243563 and -98966682
	Store lower half (-581487198) to register lo
	Store upper half (-418161892) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -418161892 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -581487198 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 977563326
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 14916
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 28350
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 21754
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 84
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 250
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 174
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 174 to memory location 0x201C + 288
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 292
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	292 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 73
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 73 and -98966682
	Store lower half (1365366806) to register lo
	Store upper half (71) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 71 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1365366806 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1365366865
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1365366865 and -98966682
	Store lower half (1773470534) to register lo
	Store upper half (1333905431) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1333905431 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1773470534 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 640994129
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 640994129 and -98966682
	Store lower half (-29698746) to register lo
	Store upper half (626224036) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 626224036 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -29698746 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3681140450
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3681140450 and -98966682
	Store lower half (-2005502964) to register lo
	Store upper half (-698649438) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -698649438 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -2005502964 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1580007598
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1580007598 and -98966682
	Store lower half (1787203412) to register lo
	Store upper half (1543600310) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1543600310 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1787203412 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 914880482
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 13959
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 63458
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 49509
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 193
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 101
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 164
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 164 to memory location 0x201C + 292
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 296
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	296 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 74
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 74 and -98966682
	Store lower half (1266400124) to register lo
	Store upper half (72) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 72 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1266400124 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1266400052
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1266400052 and -98966682
	Store lower half (-631262536) to register lo
	Store upper half (1237219058) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1237219058 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -631262536 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2481046602
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2481046602 and -98966682
	Store lower half (-1942236292) to register lo
	Store upper half (-1871090152) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1871090152 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1942236292 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 474135908
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 474135908 and -98966682
	Store lower half (-1756683816) to register lo
	Store upper half (463210642) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 463210642 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1756683816 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2362911050
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2362911050 and -98966682
	Store lower half (865145212) to register lo
	Store upper half (-1986503568) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1986503568 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 865145212 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3121171724
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 47625
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 19724
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 63237
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 247
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 5
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 242
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 242 to memory location 0x201C + 296
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 300
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	300 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 75
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 75 and -98966682
	Store lower half (1167433442) to register lo
	Store upper half (73) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 73 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1167433442 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1167433387
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1167433387 and -98966682
	Store lower half (-503195358) to register lo
	Store upper half (1140532830) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1140532830 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -503195358 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2717581180
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2717581180 and -98966682
	Store lower half (631816040) to register lo
	Store upper half (-1640005916) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1640005916 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 631816040 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3147284876
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3147284876 and -98966682
	Store lower half (-306036280) to register lo
	Store upper half (-1220203658) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1220203658 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -306036280 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1518824126
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1518824126 and -98966682
	Store lower half (506003892) to register lo
	Store upper half (1483826657) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1483826657 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 506003892 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1180197973
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 18008
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 25685
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 8717
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 34
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 13
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 47
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 47 to memory location 0x201C + 300
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 304
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	304 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 76
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 76 and -98966682
	Store lower half (1068466760) to register lo
	Store upper half (74) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 74 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 1068466760 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 1068466690
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 1068466690 and -98966682
	Store lower half (-1503161652) to register lo
	Store upper half (1043846571) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 1043846571 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1503161652 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2555397991
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2555397991 and -98966682
	Store lower half (1851508746) to register lo
	Store upper half (-1798452003) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1798452003 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1851508746 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4204135639
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4204135639 and -98966682
	Store lower half (1292866218) to register lo
	Store upper half (-187705353) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -187705353 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1292866218 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3116385629
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3116385629 and -98966682
	Store lower half (405936654) to register lo
	Store upper half (-1250390909) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1250390909 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 405936654 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2907346573
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 44362
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 38541
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 15303
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 59
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 199
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 252
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 252 to memory location 0x201C + 304
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 308
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	308 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 77
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 77 and -98966682
	Store lower half (969500078) to register lo
	Store upper half (75) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 75 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 969500078 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 969500133
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 969500133 and -98966682
	Store lower half (821405758) to register lo
	Store upper half (947160449) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 947160449 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 821405758 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 142683583
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 142683583 and -98966682
	Store lower half (-324036838) to register lo
	Store upper half (139395799) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 139395799 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -324036838 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3839923661
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3839923661 and -98966682
	Store lower half (693466798) to register lo
	Store upper half (-543524985) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -543524985 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 693466798 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 4140761385
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 4140761385 and -98966682
	Store lower half (193122646) to register lo
	Store upper half (-249619307) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -249619307 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 193122646 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4204645827
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 64157
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 52675
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 14174
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 55
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 94
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 105
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 105 to memory location 0x201C + 308
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 312
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	312 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 78
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 78 and -98966682
	Store lower half (870533396) to register lo
	Store upper half (76) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 76 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 870533396 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 870533464
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 870533464 and -98966682
	Store lower half (1345339664) to register lo
	Store upper half (850474217) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 850474217 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1345339664 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1652651513
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1652651513 and -98966682
	Store lower half (-1165898698) to register lo
	Store upper half (1614570329) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1614570329 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1165898698 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3669864303
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3669864303 and -98966682
	Store lower half (-503688390) to register lo
	Store upper half (-709665755) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -709665755 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -503688390 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 877203231
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 877203231 and -98966682
	Store lower half (1569424218) to register lo
	Store upper half (856990296) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 856990296 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1569424218 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1855922434
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 28319
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 8450
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 20381
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 79
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 157
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 210
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 210 to memory location 0x201C + 312
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 316
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	316 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 79
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 79 and -98966682
	Store lower half (771566714) to register lo
	Store upper half (77) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 77 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 771566714 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 771566647
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 771566647 and -98966682
	Store lower half (-663526678) to register lo
	Store upper half (753787840) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 753787840 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -663526678 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 4104028458
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 4104028458 and -98966682
	Store lower half (-1530284868) to register lo
	Store upper half (-285505817) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -285505817 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1530284868 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1244803675
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1244803675 and -98966682
	Store lower half (-611729086) to register lo
	Store upper half (1216120315) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1216120315 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -611729086 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2482324665
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2482324665 and -98966682
	Store lower half (-809866058) to register lo
	Store upper half (-1869841539) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1869841539 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -809866058 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1597380555
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 24374
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 6091
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 18685
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 72
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 253
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 181
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 181 to memory location 0x201C + 316
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 320
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	320 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 80
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 80 and -98966682
	Store lower half (672600032) to register lo
	Store upper half (78) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 78 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 672600032 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 672599982
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 672599982 and -98966682
	Store lower half (-535459500) to register lo
	Store upper half (657101612) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 657101612 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -535459500 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3342801528
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3342801528 and -98966682
	Store lower half (492106704) to register lo
	Store upper half (-1029192193) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1029192193 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 492106704 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3757258287
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3757258287 and -98966682
	Store lower half (344605626) to register lo
	Store upper half (-624285544) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -624285544 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 344605626 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3460328226
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3460328226 and -98966682
	Store lower half (-151267956) to register lo
	Store upper half (-914373602) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -914373602 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -151267956 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1065619858
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 16260
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 4498
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 11798
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 46
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 22
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 56
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 56 to memory location 0x201C + 320
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 324
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	324 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 81
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 81 and -98966682
	Store lower half (573633350) to register lo
	Store upper half (79) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 79 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 573633350 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 573633289
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 573633289 and -98966682
	Store lower half (-1931292522) to register lo
	Store upper half (560415357) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 560415357 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1931292522 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2911212267
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2911212267 and -98966682
	Store lower half (1802627746) to register lo
	Store upper half (-1450836569) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1450836569 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1802627746 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3270776581
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3270776581 and -98966682
	Store lower half (1059560190) to register lo
	Store upper half (-1099557507) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1099557507 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1059560190 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2169606019
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2169606019 and -98966682
	Store lower half (-896837838) to register lo
	Store upper half (2119612923) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 2119612923 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -896837838 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3034443465
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 46301
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 61129
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 23060
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 90
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 20
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 78
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 78 to memory location 0x201C + 324
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 328
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	328 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 82
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 82 and -98966682
	Store lower half (474666668) to register lo
	Store upper half (80) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 80 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 474666668 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 474666748
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 474666748 and -98966682
	Store lower half (-1190192024) to register lo
	Store upper half (463729250) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 463729250 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1190192024 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2729242122
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2729242122 and -98966682
	Store lower half (720614908) to register lo
	Store upper half (-1628613671) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1628613671 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 720614908 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3021923877
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3021923877 and -98966682
	Store lower half (-973110850) to register lo
	Store upper half (-1342676029) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1342676029 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -973110850 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1778901629
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1778901629 and -98966682
	Store lower half (1831736526) to register lo
	Store upper half (1737911330) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1737911330 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1831736526 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 179861740
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 2744
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 30956
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 29268
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 114
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 84
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 38
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 38 to memory location 0x201C + 328
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 332
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	332 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 83
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 83 and -98966682
	Store lower half (375699986) to register lo
	Store upper half (81) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 81 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 375699986 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 375700035
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 375700035 and -98966682
	Store lower half (-606691406) to register lo
	Store upper half (367042975) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 367042975 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -606691406 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3459661357
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3459661357 and -98966682
	Store lower half (1193520366) to register lo
	Store upper half (-915025104) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -915025104 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1193520366 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2388033502
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2388033502 and -98966682
	Store lower half (-1299788684) to register lo
	Store upper half (-1961960000) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1961960000 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1299788684 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 965218740
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 965218740 and -98966682
	Store lower half (377334200) to register lo
	Store upper half (942977710) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 942977710 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 377334200 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 776542998
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 11849
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 6934
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 13663
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 53
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 95
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 106
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 106 to memory location 0x201C + 332
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 336
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	336 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 84
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 84 and -98966682
	Store lower half (276733304) to register lo
	Store upper half (82) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 82 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 276733304 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 276733226
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 276733226 and -98966682
	Store lower half (887676092) to register lo
	Store upper half (270356607) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 270356607 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 887676092 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 620072131
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 620072131 and -98966682
	Store lower half (-1565393230) to register lo
	Store upper half (605784133) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 605784133 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1565393230 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2259318519
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2259318519 and -98966682
	Store lower half (-1551406230) to register lo
	Store upper half (-2087709071) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -2087709071 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1551406230 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 538410267
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 538410267 and -98966682
	Store lower half (854444482) to register lo
	Store upper half (526003961) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 526003961 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 854444482 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 767027003
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 11703
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 59195
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 51852
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 202
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 140
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 70
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 70 to memory location 0x201C + 336
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 340
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	340 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 85
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 85 and -98966682
	Store lower half (177766622) to register lo
	Store upper half (83) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 83 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 177766622 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 177766541
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 177766541 and -98966682
	Store lower half (-1299890386) to register lo
	Store upper half (173670359) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 173670359 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1299890386 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3101475065
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3101475065 and -98966682
	Store lower half (1768074806) to register lo
	Store upper half (-1264957897) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1264957897 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1768074806 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3724077057
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3724077057 and -98966682
	Store lower half (-922856602) to register lo
	Store upper half (-656702197) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -656702197 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -922856602 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 270915181
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 270915181 and -98966682
	Store lower half (1591416430) to register lo
	Store upper half (264672624) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 264672624 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1591416430 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1360888606
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 20765
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 33566
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 53763
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 210
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 3
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 209
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 209 to memory location 0x201C + 340
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 344
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	344 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 86
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 86 and -98966682
	Store lower half (78799940) to register lo
	Store upper half (84) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 84 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move 78799940 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 78799888
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 78799888 and -98966682
	Store lower half (1935543904) to register lo
	Store upper half (76984143) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move 76984143 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1935543904 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2009637167
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2009637167 and -98966682
	Store lower half (1148446138) to register lo
	Store upper half (1963330150) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1963330150 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1148446138 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 829812700
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 829812700 and -98966682
	Store lower half (-1926650456) to register lo
	Store upper half (810691760) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 810691760 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1926650456 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3178989848
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3178989848 and -98966682
	Store lower half (-585046128) to register lo
	Store upper half (-1189229247) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1189229247 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -585046128 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1681730257
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 25661
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 10961
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 20204
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 78
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 236
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 162
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 162 to memory location 0x201C + 344
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 348
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	348 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 87
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 87 and -98966682
	Store lower half (-20166742) to register lo
	Store upper half (84) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 84 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -20166742 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4274800638
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4274800638 and -98966682
	Store lower half (-1123489484) to register lo
	Store upper half (-118668651) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -118668651 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1123489484 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1172679585
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1172679585 and -98966682
	Store lower half (2104173862) to register lo
	Store upper half (1145658143) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1145658143 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 2104173862 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 958561849
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 958561849 and -98966682
	Store lower half (1463539126) to register lo
	Store upper half (936474210) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 936474210 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1463539126 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 1625990100
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 1625990100 and -98966682
	Store lower half (-1267318152) to register lo
	Store upper half (1588523261) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 1588523261 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1267318152 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3940070021
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 60120
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 45701
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 22621
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 88
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 93
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 5
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 5 to memory location 0x201C + 348
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 352
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	352 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 88
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 88 and -98966682
	Store lower half (-119133424) to register lo
	Store upper half (85) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 85 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -119133424 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4175833925
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4175833925 and -98966682
	Store lower half (-539988866) to register lo
	Store upper half (-215354926) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -215354926 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -539988866 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 754556332
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 754556332 and -98966682
	Store lower half (-1609542008) to register lo
	Store upper half (737169485) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 737169485 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1609542008 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2346714821
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2346714821 and -98966682
	Store lower half (1820352894) to register lo
	Store upper half (-2002326596) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -2002326596 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1820352894 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3827731138
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3827731138 and -98966682
	Store lower half (358043468) to register lo
	Store upper half (-555436562) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -555436562 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 358043468 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3417569954
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 52147
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 64162
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 12561
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 49
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 17
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 32
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 32 to memory location 0x201C + 352
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 356
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	356 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 89
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 89 and -98966682
	Store lower half (-218100106) to register lo
	Store upper half (86) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 86 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -218100106 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 4076867104
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 4076867104 and -98966682
	Store lower half (2141978816) to register lo
	Store upper half (-312041306) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -312041306 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 2141978816 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2462752870
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2462752870 and -98966682
	Store lower half (1860983460) to register lo
	Store upper half (-1888962351) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1888962351 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1860983460 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3783582325
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3783582325 and -98966682
	Store lower half (254605726) to register lo
	Store upper half (-598568077) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -598568077 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 254605726 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3548277485
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3548277485 and -98966682
	Store lower half (1079230830) to register lo
	Store upper half (-828450911) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -828450911 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1079230830 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2395805391
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 36557
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 5839
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 38914
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 152
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 2
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 154
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 154 to memory location 0x201C + 356
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 360
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	360 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 90
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 90 and -98966682
	Store lower half (-317066788) to register lo
	Store upper half (87) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 87 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -317066788 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3977900427
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3977900427 and -98966682
	Store lower half (-837321118) to register lo
	Store upper half (-408727546) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -408727546 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -837321118 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 699674212
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 699674212 and -98966682
	Store lower half (-1833883688) to register lo
	Store upper half (683551985) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 683551985 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1833883688 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3121548073
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3121548073 and -98966682
	Store lower half (-1713058474) to register lo
	Store upper half (-1245347421) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1245347421 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1713058474 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 740379893
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 740379893 and -98966682
	Store lower half (-496047970) to register lo
	Store upper half (723319706) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 723319706 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -496047970 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3379696388
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 51570
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 4868
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 55926
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 218
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 118
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 172
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 172 to memory location 0x201C + 360
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 364
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	364 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 91
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 91 and -98966682
	Store lower half (-416033470) to register lo
	Store upper half (88) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 88 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -416033470 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3878933786
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3878933786 and -98966682
	Store lower half (1210512988) to register lo
	Store upper half (-505413750) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -505413750 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1210512988 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2851670486
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2851670486 and -98966682
	Store lower half (2128129348) to register lo
	Store upper half (-1509006360) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1509006360 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 2128129348 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3637956268
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3637956268 and -98966682
	Store lower half (94690440) to register lo
	Store upper half (-740838549) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -740838549 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 94690440 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3597889507
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3597889507 and -98966682
	Store lower half (1767890290) to register lo
	Store upper half (-779982073) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -779982073 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1767890290 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3101537909
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 47325
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 46709
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 3752
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 14
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 168
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 166
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 166 to memory location 0x201C + 364
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 368
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	368 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 92
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 92 and -98966682
	Store lower half (-515000152) to register lo
	Store upper half (89) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 89 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -515000152 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3779967217
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3779967217 and -98966682
	Store lower half (427713286) to register lo
	Store upper half (-602099884) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -602099884 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 427713286 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3311586386
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3311586386 and -98966682
	Store lower half (1217142444) to register lo
	Store upper half (-1059688061) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -1059688061 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 1217142444 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2287628079
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2287628079 and -98966682
	Store lower half (1177942458) to register lo
	Store upper half (-2060051833) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -2060051833 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1177942458 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3271811901
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3271811901 and -98966682
	Store lower half (-385834674) to register lo
	Store upper half (-1098546044) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1098546044 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -385834674 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1468343754
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 22405
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 9674
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 29263
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 114
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 79
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 61
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 61 to memory location 0x201C + 368
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 372
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	372 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 93
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 93 and -98966682
	Store lower half (-613966834) to register lo
	Store upper half (90) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 90 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -613966834 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3681000532
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3681000532 and -98966682
	Store lower half (-1759853192) to register lo
	Store upper half (-698786132) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -698786132 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1759853192 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1094949844
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1094949844 and -98966682
	Store lower half (869339768) to register lo
	Store upper half (1069719488) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1069719488 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 869339768 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 202608056
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 202608056 and -98966682
	Store lower half (-1385390256) to register lo
	Store upper half (197939464) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 197939464 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -1385390256 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2795556440
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2795556440 and -98966682
	Store lower half (295845648) to register lo
	Store upper half (-1563827399) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1563827399 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 295845648 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 3010190377
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 45931
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 56361
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 28482
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 111
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 66
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 45
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 45 to memory location 0x201C + 372
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 376
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	376 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 94
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 94 and -98966682
	Store lower half (-712933516) to register lo
	Store upper half (91) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 91 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -712933516 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3582033711
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3582033711 and -98966682
	Store lower half (922114490) to register lo
	Store upper half (-795472512) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -795472512 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 922114490 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 3865072698
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 3865072698 and -98966682
	Store lower half (314244380) to register lo
	Store upper half (-518955444) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -518955444 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 314244380 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4088111952
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4088111952 and -98966682
	Store lower half (1526923744) to register lo
	Store upper half (-301055567) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -301055567 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1526923744 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3037544529
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3037544529 and -98966682
	Store lower half (1161327430) to register lo
	Store upper half (-1327415315) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1327415315 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1161327430 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 4124658859
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 62937
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 19627
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 47474
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 185
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 114
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 203
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 203 to memory location 0x201C + 376
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 380
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	380 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 95
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 95 and -98966682
	Store lower half (-811900198) to register lo
	Store upper half (92) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 92 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -811900198 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3483067014
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3483067014 and -98966682
	Store lower half (-77851804) to register lo
	Store upper half (-892158772) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -892158772 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -77851804 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 831434664
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 831434664 and -98966682
	Store lower half (2080634096) to register lo
	Store upper half (812276350) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 812276350 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move 2080634096 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1281994382
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1281994382 and -98966682
	Store lower half (-540969324) to register lo
	Store upper half (1252454056) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1252454056 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -540969324 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2506594364
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2506594364 and -98966682
	Store lower half (-652223512) to register lo
	Store upper half (-1846131074) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1846131074 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -652223512 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1223269782
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 18665
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 40342
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 54655
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 213
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 127
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 170
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 170 to memory location 0x201C + 380
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 384
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	384 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 96
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 96 and -98966682
	Store lower half (-910866880) to register lo
	Store upper half (93) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 93 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -910866880 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3384100381
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3384100381 and -98966682
	Store lower half (1178248846) to register lo
	Store upper half (-988844968) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -988844968 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move 1178248846 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 2201340630
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 2201340630 and -98966682
	Store lower half (-986672316) to register lo
	Store upper half (-2144351006) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move -2144351006 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -986672316 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 1159684006
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 1159684006 and -98966682
	Store lower half (-813281756) to register lo
	Store upper half (1132962014) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move 1132962014 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -813281756 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2348936954
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2348936954 and -98966682
	Store lower half (-99162724) to register lo
	Store upper half (-2000155667) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -2000155667 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -99162724 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 1927212657
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 29406
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 61041
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 40111
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 156
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 175
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 51
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 51 to memory location 0x201C + 384
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 388
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	388 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 97
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 97 and -98966682
	Store lower half (-1009833562) to register lo
	Store upper half (94) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 94 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1009833562 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3285133816
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3285133816 and -98966682
	Store lower half (-417584) to register lo
	Store upper half (-1085531099) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1085531099 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -417584 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1085652213
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1085652213 and -98966682
	Store lower half (-1528592226) to register lo
	Store upper half (1060636097) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1060636097 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1528592226 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 2614857055
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 2614857055 and -98966682
	Store lower half (1545375962) to register lo
	Store upper half (-1740363023) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1740363023 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 1545375962 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3294149163
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3294149163 and -98966682
	Store lower half (346115618) to register lo
	Store upper half (-1076723487) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -1076723487 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 346115618 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2876493507
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 43891
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 52931
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 26032
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 101
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 176
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 213
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 213 to memory location 0x201C + 388
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 392
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	392 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 98
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 98 and -98966682
	Store lower half (-1108800244) to register lo
	Store upper half (95) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 95 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1108800244 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3186167123
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3186167123 and -98966682
	Store lower half (-1396250606) to register lo
	Store upper half (-1182217354) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1182217354 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -1396250606 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 357442404
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 357442404 and -98966682
	Store lower half (-481835560) to register lo
	Store upper half (349206045) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 349206045 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -481835560 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4153914309
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4153914309 and -98966682
	Store lower half (454446974) to register lo
	Store upper half (-236769459) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -236769459 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 454446974 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 3941949491
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 3941949491 and -98966682
	Store lower half (1695321426) to register lo
	Store upper half (-443850083) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -443850083 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move 1695321426 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2156392399
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 32903
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 61391
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 28488
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 111
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 72
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 39
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 39 to memory location 0x201C + 392
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 396
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	396 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 99
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 99 and -98966682
	Store lower half (-1207766926) to register lo
	Store upper half (96) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 96 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1207766926 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 3087200274
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 3087200274 and -98966682
	Store lower half (-238183124) to register lo
	Store upper half (-1278903762) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1278903762 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -238183124 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1107879682
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1107879682 and -98966682
	Store lower half (-1214983988) to register lo
	Store upper half (1082351390) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1082351390 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1214983988 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 4145516498
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 4145516498 and -98966682
	Store lower half (2003600300) to register lo
	Store upper half (-244973764) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -244973764 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move 2003600300 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 2248768656
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 2248768656 and -98966682
	Store lower half (-1689562784) to register lo
	Store upper half (-2098015839) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move -2098015839 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1689562784 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 431587521
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 6585
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 32961
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 39288
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 153
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 120
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 225
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 225 to memory location 0x201C + 396
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 400
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	400 is not equal to 404
	PC: 132 --> 16
Instruction: srl $9, $16, 2
	Change $9 to 100
	PC: 16 --> 20
Instruction: multu $9, $8
	Multiply 100 and -98966682
	Store lower half (-1306733608) to register lo
	Store upper half (97) to register hi
	PC: 20 --> 24
Instruction: mfhi $14
	Move 97 to $14
	PC: 24 --> 28
Instruction: mflo $15
	Move -1306733608 to $15
	PC: 28 --> 32
Instruction: xor $9, $14, $15
	Change $9 to 2988233657
	PC: 32 --> 36
Instruction: multu $9, $8
	Multiply 2988233657 and -98966682
	Store lower half (-565549386) to register lo
	Store upper half (-1375589943) to register hi
	PC: 36 --> 40
Instruction: mfhi $14
	Move -1375589943 to $14
	PC: 40 --> 44
Instruction: mflo $15
	Move -565549386 to $15
	PC: 44 --> 48
Instruction: xor $9, $14, $15
	Change $9 to 1883787135
	PC: 48 --> 52
Instruction: multu $9, $8
	Multiply 1883787135 and -98966682
	Store lower half (-1531688550) to register lo
	Store upper half (1840380014) to register hi
	PC: 52 --> 56
Instruction: mfhi $14
	Move 1840380014 to $14
	PC: 56 --> 60
Instruction: mflo $15
	Move -1531688550 to $15
	PC: 60 --> 64
Instruction: xor $9, $14, $15
	Change $9 to 3372593652
	PC: 64 --> 68
Instruction: multu $9, $8
	Multiply 3372593652 and -98966682
	Store lower half (-840678600) to register lo
	Store upper half (-1000086554) to register hi
	PC: 68 --> 72
Instruction: mfhi $14
	Move -1000086554 to $14
	PC: 72 --> 76
Instruction: mflo $15
	Move -840678600 to $15
	PC: 76 --> 80
Instruction: xor $9, $14, $15
	Change $9 to 159883486
	PC: 80 --> 84
Instruction: multu $9, $8
	Multiply 159883486 and -98966682
	Store lower half (-1856179596) to register lo
	Store upper half (156199374) to register hi
	PC: 84 --> 88
Instruction: mfhi $14
	Move 156199374 to $14
	PC: 88 --> 92
Instruction: mflo $15
	Move -1856179596 to $15
	PC: 92 --> 96
Instruction: xor $9, $14, $15
	Change $9 to 2551421882
	PC: 96 --> 100
Instruction: srl $14, $9, 16
	Change $14 to 38931
	PC: 100 --> 104
Instruction: andi $15, $9, 0xFFFF
	Change $15 to 39866
	PC: 104 --> 108
Instruction: xor $9, $14, $15
	Change $9 to 937
	PC: 108 --> 112
Instruction: srl $14, $9, 8
	Change $14 to 3
	PC: 112 --> 116
Instruction: andi $15, $9, 0xFF
	Change $15 to 169
	PC: 116 --> 120
Instruction: xor $10, $14, $15
	Change $10 to 170
	PC: 120 --> 124
Instruction: sw $10, 0x201C($16)
	Move 170 to memory location 0x201C + 400
	PC: 124 --> 128
Instruction: addi $16, $16, 4
	Change $16 to 404
	PC: 128 --> 132
Instruction: bne $16, $17, loopdi
	404 is equal to 404
	PC: 132 --> 136
Instruction: addi $16, $0, 0
	Change $16 to 0
	PC: 136 --> 140
Instruction: addi $17, $0, 400
	Change $17 to 400
	PC: 140 --> 144
Instruction: addi $12, $0, 4
	Change $12 to 4
	PC: 144 --> 148
Instruction: addi $21, $0, 0x1F
	Change $21 to 31
	PC: 148 --> 152
Instruction: lw $14, 0x2020($16)
	Move 142 to $14 from memory location 0x2020 + 0
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 14
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	14 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 71
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	71 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 35
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	35 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 17
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	17 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 4
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	4 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 81 to $14 from memory location 0x2020 + 4
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 17
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	17 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 40
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	40 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 20
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	20 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 10
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	10 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 8
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	8 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 205 to $14 from memory location 0x2020 + 8
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 13
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	13 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 102
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	102 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 51
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	51 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 25
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	25 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 12
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	12 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 154 to $14 from memory location 0x2020 + 12
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 26
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	26 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 77
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	77 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 38
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	38 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 19
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	19 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 16
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	16 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 52 to $14 from memory location 0x2020 + 16
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 20
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	20 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 26
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	26 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 13
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	13 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 6
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	6 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 20
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	20 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 216 to $14 from memory location 0x2020 + 20
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 24
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	24 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 108
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	108 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 54
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	54 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 27
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	27 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 24
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	24 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 173 to $14 from memory location 0x2020 + 24
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 13
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	13 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 86
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	86 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 43
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	43 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 21
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	21 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 28
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	28 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 33 to $14 from memory location 0x2020 + 28
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 1
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	1 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 16
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	16 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 8
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	8 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 4
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	4 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 32
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	32 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 110 to $14 from memory location 0x2020 + 32
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 14
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	14 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 55
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	55 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 27
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	27 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 13
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	13 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 36
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	36 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 196 to $14 from memory location 0x2020 + 36
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 4
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	4 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 98
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	98 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 49
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	49 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 24
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	24 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 40
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	40 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 133 to $14 from memory location 0x2020 + 40
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 5
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	5 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 66
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	66 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 33
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	33 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 16
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	16 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 44
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	44 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 210 to $14 from memory location 0x2020 + 44
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 18
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	18 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 105
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	105 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 52
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	52 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 26
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	26 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 48
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	48 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 241 to $14 from memory location 0x2020 + 48
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 17
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	17 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 120
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	120 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 60
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	60 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 30
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	30 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 52
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	52 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 223 to $14 from memory location 0x2020 + 52
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 31
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	31 is equal to 31
	PC: 160 --> 164
Instruction: addi $19, $19, 1
	Change $19 to 1
	PC: 164 --> 168
Instruction: bne $19, $0, finish
	1 is not equal to 0
	PC: 168 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 56
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	56 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 227 to $14 from memory location 0x2020 + 56
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 3
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	3 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 113
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	113 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 56
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	56 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 28
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	28 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 60
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	60 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 244 to $14 from memory location 0x2020 + 60
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 20
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	20 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 122
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	122 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 61
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	61 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 30
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	30 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 64
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	64 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 124 to $14 from memory location 0x2020 + 64
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 28
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	28 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 62
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	62 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 31
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	31 is equal to 31
	PC: 192 --> 196
Instruction: addi $19, $19, 1
	Change $19 to 2
	PC: 196 --> 200
Instruction: bne $19, $0, finish
	2 is not equal to 0
	PC: 200 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 68
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	68 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 32 to $14 from memory location 0x2020 + 68
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 0
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	0 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 16
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	16 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 8
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	8 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 4
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	4 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 72
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	72 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 46 to $14 from memory location 0x2020 + 72
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 14
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	14 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 23
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	23 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 11
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	11 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 5
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	5 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 76
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	76 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 22 to $14 from memory location 0x2020 + 76
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 22
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	22 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 11
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	11 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 5
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	5 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 2
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	2 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 80
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	80 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 141 to $14 from memory location 0x2020 + 80
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 13
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	13 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 70
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	70 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 35
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	35 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 17
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	17 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 84
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	84 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 77 to $14 from memory location 0x2020 + 84
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 13
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	13 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 38
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	38 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 19
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	19 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 9
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	9 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 88
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	88 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 174 to $14 from memory location 0x2020 + 88
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 14
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	14 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 87
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	87 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 43
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	43 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 21
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	21 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 92
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	92 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 114 to $14 from memory location 0x2020 + 92
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 18
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	18 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 57
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	57 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 28
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	28 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 14
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	14 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 96
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	96 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 10 to $14 from memory location 0x2020 + 96
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 10
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	10 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 5
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	5 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 2
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	2 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 1
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	1 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 100
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	100 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 23 to $14 from memory location 0x2020 + 100
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 23
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	23 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 11
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	11 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 5
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	5 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 2
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	2 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 104
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	104 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 122 to $14 from memory location 0x2020 + 104
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 26
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	26 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 61
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	61 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 30
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	30 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 15
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	15 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 108
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	108 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 52 to $14 from memory location 0x2020 + 108
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 20
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	20 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 26
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	26 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 13
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	13 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 6
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	6 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 112
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	112 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 88 to $14 from memory location 0x2020 + 112
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 24
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	24 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 44
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	44 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 22
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	22 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 11
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	11 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 116
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	116 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 131 to $14 from memory location 0x2020 + 116
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 3
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	3 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 65
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	65 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 32
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	32 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 16
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	16 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 120
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	120 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 187 to $14 from memory location 0x2020 + 120
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 27
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	27 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 93
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	93 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 46
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	46 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 23
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	23 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 124
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	124 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 179 to $14 from memory location 0x2020 + 124
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 19
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	19 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 89
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	89 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 44
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	44 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 22
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	22 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 128
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	128 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 216 to $14 from memory location 0x2020 + 128
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 24
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	24 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 108
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	108 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 54
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	54 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 27
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	27 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 132
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	132 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 221 to $14 from memory location 0x2020 + 132
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 29
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	29 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 110
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	110 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 55
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	55 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 27
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	27 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 136
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	136 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 67 to $14 from memory location 0x2020 + 136
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 3
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	3 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 33
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	33 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 16
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	16 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 8
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	8 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 140
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	140 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 159 to $14 from memory location 0x2020 + 140
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 31
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	31 is equal to 31
	PC: 160 --> 164
Instruction: addi $19, $19, 1
	Change $19 to 3
	PC: 164 --> 168
Instruction: bne $19, $0, finish
	3 is not equal to 0
	PC: 168 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 144
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	144 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 121 to $14 from memory location 0x2020 + 144
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 25
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	25 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 60
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	60 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 30
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	30 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 15
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	15 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 148
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	148 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 20 to $14 from memory location 0x2020 + 148
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 20
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	20 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 10
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	10 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 5
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	5 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 2
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	2 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 152
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	152 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 159 to $14 from memory location 0x2020 + 152
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 31
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	31 is equal to 31
	PC: 160 --> 164
Instruction: addi $19, $19, 1
	Change $19 to 4
	PC: 164 --> 168
Instruction: bne $19, $0, finish
	4 is not equal to 0
	PC: 168 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 156
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	156 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 223 to $14 from memory location 0x2020 + 156
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 31
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	31 is equal to 31
	PC: 160 --> 164
Instruction: addi $19, $19, 1
	Change $19 to 5
	PC: 164 --> 168
Instruction: bne $19, $0, finish
	5 is not equal to 0
	PC: 168 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 160
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	160 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 249 to $14 from memory location 0x2020 + 160
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 25
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	25 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 124
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	124 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 62
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	62 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 31
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	31 is equal to 31
	PC: 208 --> 212
Instruction: addi $19, $19, 1
	Change $19 to 6
	PC: 212 --> 216
Instruction: bne $19, $0, finish
	6 is not equal to 0
	PC: 216 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 164
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	164 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 254 to $14 from memory location 0x2020 + 164
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 30
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	30 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 127
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	127 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 63
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	63 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 31
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	31 is equal to 31
	PC: 208 --> 212
Instruction: addi $19, $19, 1
	Change $19 to 7
	PC: 212 --> 216
Instruction: bne $19, $0, finish
	7 is not equal to 0
	PC: 216 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 168
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	168 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 8 to $14 from memory location 0x2020 + 168
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 8
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	8 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 4
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	4 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 2
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	2 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 1
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	1 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 172
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	172 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 125 to $14 from memory location 0x2020 + 172
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 29
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	29 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 62
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	62 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 31
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	31 is equal to 31
	PC: 192 --> 196
Instruction: addi $19, $19, 1
	Change $19 to 8
	PC: 196 --> 200
Instruction: bne $19, $0, finish
	8 is not equal to 0
	PC: 200 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 176
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	176 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 240 to $14 from memory location 0x2020 + 176
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 16
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	16 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 120
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	120 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 60
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	60 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 30
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	30 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 180
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	180 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 235 to $14 from memory location 0x2020 + 180
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 11
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	11 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 117
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	117 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 58
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	58 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 29
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	29 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 184
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	184 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 103 to $14 from memory location 0x2020 + 184
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 7
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	7 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 51
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	51 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 25
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	25 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 12
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	12 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 188
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	188 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 44 to $14 from memory location 0x2020 + 188
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 12
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	12 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 22
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	22 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 11
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	11 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 5
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	5 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 192
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	192 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 143 to $14 from memory location 0x2020 + 192
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 15
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	15 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 71
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	71 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 35
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	35 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 17
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	17 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 196
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	196 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 136 to $14 from memory location 0x2020 + 196
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 8
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	8 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 68
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	68 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 34
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	34 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 17
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	17 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 200
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	200 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 30 to $14 from memory location 0x2020 + 200
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 30
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	30 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 15
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	15 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 7
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	7 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 3
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	3 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 204
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	204 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 165 to $14 from memory location 0x2020 + 204
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 5
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	5 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 82
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	82 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 41
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	41 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 20
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	20 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 208
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	208 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 101 to $14 from memory location 0x2020 + 208
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 5
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	5 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 50
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	50 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 25
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	25 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 12
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	12 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 212
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	212 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 215 to $14 from memory location 0x2020 + 212
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 23
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	23 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 107
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	107 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 53
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	53 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 26
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	26 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 216
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	216 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 195 to $14 from memory location 0x2020 + 216
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 3
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	3 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 97
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	97 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 48
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	48 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 24
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	24 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 220
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	220 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 149 to $14 from memory location 0x2020 + 220
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 21
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	21 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 74
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	74 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 37
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	37 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 18
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	18 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 224
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	224 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 95 to $14 from memory location 0x2020 + 224
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 31
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	31 is equal to 31
	PC: 160 --> 164
Instruction: addi $19, $19, 1
	Change $19 to 9
	PC: 164 --> 168
Instruction: bne $19, $0, finish
	9 is not equal to 0
	PC: 168 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 228
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	228 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 235 to $14 from memory location 0x2020 + 228
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 11
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	11 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 117
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	117 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 58
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	58 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 29
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	29 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 232
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	232 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 103 to $14 from memory location 0x2020 + 232
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 7
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	7 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 51
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	51 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 25
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	25 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 12
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	12 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 236
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	236 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 141 to $14 from memory location 0x2020 + 236
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 13
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	13 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 70
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	70 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 35
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	35 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 17
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	17 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 240
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	240 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 239 to $14 from memory location 0x2020 + 240
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 15
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	15 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 119
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	119 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 59
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	59 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 29
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	29 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 244
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	244 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 20 to $14 from memory location 0x2020 + 244
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 20
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	20 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 10
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	10 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 5
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	5 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 2
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	2 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 248
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	248 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 139 to $14 from memory location 0x2020 + 248
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 11
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	11 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 69
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	69 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 34
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	34 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 17
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	17 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 252
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	252 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 252 to $14 from memory location 0x2020 + 252
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 28
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	28 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 126
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	126 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 63
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	63 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 31
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	31 is equal to 31
	PC: 208 --> 212
Instruction: addi $19, $19, 1
	Change $19 to 10
	PC: 212 --> 216
Instruction: bne $19, $0, finish
	10 is not equal to 0
	PC: 216 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 256
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	256 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 15 to $14 from memory location 0x2020 + 256
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 15
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	15 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 7
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	7 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 3
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	3 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 1
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	1 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 260
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	260 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 191 to $14 from memory location 0x2020 + 260
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 31
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	31 is equal to 31
	PC: 160 --> 164
Instruction: addi $19, $19, 1
	Change $19 to 11
	PC: 164 --> 168
Instruction: bne $19, $0, finish
	11 is not equal to 0
	PC: 168 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 264
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	264 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 23 to $14 from memory location 0x2020 + 264
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 23
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	23 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 11
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	11 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 5
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	5 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 2
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	2 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 268
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	268 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 124 to $14 from memory location 0x2020 + 268
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 28
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	28 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 62
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	62 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 31
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	31 is equal to 31
	PC: 192 --> 196
Instruction: addi $19, $19, 1
	Change $19 to 12
	PC: 196 --> 200
Instruction: bne $19, $0, finish
	12 is not equal to 0
	PC: 200 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 272
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	272 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 14 to $14 from memory location 0x2020 + 272
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 14
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	14 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 7
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	7 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 3
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	3 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 1
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	1 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 276
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	276 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 229 to $14 from memory location 0x2020 + 276
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 5
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	5 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 114
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	114 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 57
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	57 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 28
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	28 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 280
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	280 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 39 to $14 from memory location 0x2020 + 280
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 7
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	7 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 19
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	19 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 9
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	9 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 4
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	4 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 284
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	284 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 174 to $14 from memory location 0x2020 + 284
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 14
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	14 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 87
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	87 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 43
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	43 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 21
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	21 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 288
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	288 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 164 to $14 from memory location 0x2020 + 288
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 4
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	4 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 82
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	82 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 41
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	41 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 20
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	20 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 292
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	292 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 242 to $14 from memory location 0x2020 + 292
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 18
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	18 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 121
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	121 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 60
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	60 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 30
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	30 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 296
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	296 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 47 to $14 from memory location 0x2020 + 296
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 15
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	15 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 23
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	23 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 11
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	11 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 5
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	5 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 300
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	300 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 252 to $14 from memory location 0x2020 + 300
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 28
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	28 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 126
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	126 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 63
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	63 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 31
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	31 is equal to 31
	PC: 208 --> 212
Instruction: addi $19, $19, 1
	Change $19 to 13
	PC: 212 --> 216
Instruction: bne $19, $0, finish
	13 is not equal to 0
	PC: 216 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 304
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	304 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 105 to $14 from memory location 0x2020 + 304
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 9
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	9 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 52
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	52 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 26
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	26 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 13
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	13 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 308
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	308 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 210 to $14 from memory location 0x2020 + 308
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 18
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	18 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 105
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	105 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 52
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	52 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 26
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	26 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 312
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	312 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 181 to $14 from memory location 0x2020 + 312
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 21
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	21 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 90
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	90 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 45
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	45 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 22
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	22 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 316
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	316 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 56 to $14 from memory location 0x2020 + 316
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 24
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	24 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 28
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	28 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 14
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	14 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 7
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	7 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 320
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	320 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 78 to $14 from memory location 0x2020 + 320
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 14
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	14 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 39
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	39 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 19
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	19 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 9
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	9 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 324
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	324 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 38 to $14 from memory location 0x2020 + 324
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 6
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	6 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 19
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	19 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 9
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	9 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 4
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	4 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 328
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	328 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 106 to $14 from memory location 0x2020 + 328
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 10
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	10 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 53
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	53 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 26
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	26 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 13
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	13 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 332
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	332 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 70 to $14 from memory location 0x2020 + 332
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 6
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	6 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 35
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	35 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 17
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	17 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 8
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	8 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 336
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	336 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 209 to $14 from memory location 0x2020 + 336
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 17
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	17 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 104
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	104 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 52
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	52 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 26
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	26 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 340
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	340 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 162 to $14 from memory location 0x2020 + 340
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 2
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	2 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 81
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	81 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 40
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	40 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 20
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	20 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 344
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	344 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 5 to $14 from memory location 0x2020 + 344
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 5
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	5 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 2
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	2 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 1
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	1 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 0
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	0 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 348
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	348 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 32 to $14 from memory location 0x2020 + 348
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 0
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	0 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 16
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	16 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 8
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	8 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 4
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	4 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 352
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	352 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 154 to $14 from memory location 0x2020 + 352
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 26
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	26 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 77
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	77 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 38
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	38 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 19
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	19 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 356
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	356 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 172 to $14 from memory location 0x2020 + 356
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 12
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	12 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 86
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	86 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 43
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	43 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 21
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	21 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 360
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	360 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 166 to $14 from memory location 0x2020 + 360
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 6
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	6 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 83
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	83 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 41
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	41 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 20
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	20 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 364
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	364 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 61 to $14 from memory location 0x2020 + 364
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 29
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	29 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 30
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	30 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 15
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	15 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 7
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	7 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 368
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	368 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 45 to $14 from memory location 0x2020 + 368
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 13
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	13 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 22
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	22 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 11
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	11 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 5
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	5 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 372
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	372 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 203 to $14 from memory location 0x2020 + 372
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 11
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	11 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 101
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	101 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 50
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	50 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 25
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	25 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 376
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	376 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 170 to $14 from memory location 0x2020 + 376
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 10
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	10 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 85
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	85 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 42
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	42 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 21
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	21 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 380
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	380 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 51 to $14 from memory location 0x2020 + 380
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 19
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	19 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 25
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	25 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 12
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	12 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 6
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	6 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 384
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	384 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 213 to $14 from memory location 0x2020 + 384
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 21
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	21 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 106
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	106 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 53
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	53 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 26
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	26 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 388
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	388 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 39 to $14 from memory location 0x2020 + 388
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 7
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	7 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 19
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	19 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 9
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	9 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 4
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	4 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 392
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	392 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 225 to $14 from memory location 0x2020 + 392
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 1
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	1 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 112
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	112 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 56
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	56 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 28
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	28 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 396
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	396 is not equal to 400
	PC: 224 --> 152
Instruction: lw $14, 0x2020($16)
	Move 170 to $14 from memory location 0x2020 + 396
	PC: 152 --> 156
Instruction: andi $15, $14, 0x1F
	Change $15 to 10
	PC: 156 --> 160
Instruction: bne $15, $21, skip1
	10 is not equal to 31
	PC: 160 --> 172
Instruction: srl $15, $14, 1
	Change $15 to 85
	PC: 172 --> 176
Instruction: bne $15, $21, skip2
	85 is not equal to 31
	PC: 176 --> 188
Instruction: srl $15, $14, 2
	Change $15 to 42
	PC: 188 --> 192
Instruction: bne $15, $21, skip3
	42 is not equal to 31
	PC: 192 --> 204
Instruction: srl $15, $14, 3
	Change $15 to 21
	PC: 204 --> 208
Instruction: bne $15, $21, finish
	21 is not equal to 31
	PC: 208 --> 220
Instruction: addi $16, $16, 4
	Change $16 to 400
	PC: 220 --> 224
Instruction: bne $16, $17, loopy
	400 is equal to 400
	PC: 224 --> 228
Instruction: sw $19, 0x2008($0)
	Move 13 to memory location 0x2008 + 0
	PC: 228 --> 232
ECE 366 Project 2
Created by: Zhongy Chen, Chris Nyauchi, and Claire Chappee
Output for Hash-MIPS-default.asm
****************************************************
$0 --> 0
$8 --> -98966682
$9 --> 937
$10 --> 170
$11 --> 0
$12 --> 4
$13 --> 0
$14 --> 170
$15 --> 21
$16 --> 400
$17 --> 400
$18 --> 0
$19 --> 13
$20 --> 0
$21 --> 31
$22 --> 0
$23 --> 0
pc --> 232
hi --> 156199374
lo --> -1856179596
****************************************************
The memory contents of 0x2000 - 0x225C are:
   0    0   13    0    0    0    0    0 
 142   81  205  154   52  216  173   33 
 110  196  133  210  241  223  227  244 
 124   32   46   22  141   77  174  114 
  10   23  122   52   88  131  187  179 
 216  221   67  159  121   20  159  223 
 249  254    8  125  240  235  103   44 
 143  136   30  165  101  215  195  149 
  95  235  103  141  239   20  139  252 
  15  191   23  124   14  229   39  174 
 164  242   47  252  105  210  181   56 
  78   38  106   70  209  162    5   32 
 154  172  166   61   45  203  170   51 
 213   39  225  170    0    0    0    0 
   0    0    0    0    0    0    0    0 
   0    0    0    0    0    0    0    0 
   0    0    0    0    0    0    0    0 
   0    0    0    0    0    0    0    0 
   0    0    0    0    0    0    0    0 
****************************************************
Dynamic Instruction Count --> 4093